{
	"id": "d6ac789b4c9915fab8550a9c3e4e89a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Test_1/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Inspired by https://solidity-by-example.org/defi/staking-rewards/\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\nerror TransferFailed();\r\nerror NeedsMoreThanZero();\r\n\r\ncontract Staking is ReentrancyGuard {\r\n    IERC20 public s_rewardsToken;\r\n    IERC20 public s_stakingToken;\r\n\r\n    // This is the reward token per second\r\n    // Which will be multiplied by the tokens the user staked divided by the total\r\n    // This ensures a steady reward rate of the platform\r\n    // So the more users stake, the less for everyone who is staking.\r\n    uint256 public constant REWARD_RATE = 100;\r\n    uint256 public s_lastUpdateTime;\r\n    uint256 public s_rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public s_userRewardPerTokenPaid;\r\n    mapping(address => uint256) public s_rewards;\r\n\r\n    uint256 private s_totalSupply;\r\n    mapping(address => uint256) public s_balances;\r\n\r\n    event Staked(address indexed user, uint256 indexed amount);\r\n    event WithdrewStake(address indexed user, uint256 indexed amount);\r\n    event RewardsClaimed(address indexed user, uint256 indexed amount);\r\n\r\n    constructor(address stakingToken, address rewardsToken) {\r\n        s_stakingToken = IERC20(stakingToken);\r\n        s_rewardsToken = IERC20(rewardsToken);\r\n    }\r\n\r\n    /**\r\n     * @notice How much reward a token gets based on how long it's been in and during which \"snapshots\"\r\n     */\r\n    function rewardPerToken() public view returns (uint256) {\r\n        if (s_totalSupply == 0) {\r\n            return s_rewardPerTokenStored;\r\n        }\r\n        return\r\n            s_rewardPerTokenStored +\r\n            (((block.timestamp - s_lastUpdateTime) * REWARD_RATE * 1e18) / s_totalSupply);\r\n    }\r\n\r\n    /**\r\n     * @notice How much reward a user has earned\r\n     */\r\n    function earned(address account) public view returns (uint256) {\r\n        return\r\n            ((s_balances[account] * (rewardPerToken() - s_userRewardPerTokenPaid[account])) /\r\n                1e18) + s_rewards[account];\r\n    }\r\n\r\n    /**\r\n     * @notice Deposit tokens into this contract\r\n     * @param amount | How much to stake\r\n     */\r\n    function stake(uint256 amount)\r\n        external\r\n        updateReward(msg.sender)\r\n        nonReentrant\r\n        moreThanZero(amount)\r\n    {\r\n        s_totalSupply += amount;\r\n        s_balances[msg.sender] += amount;\r\n        emit Staked(msg.sender, amount);\r\n        bool success = s_stakingToken.transferFrom(msg.sender, address(this), amount);\r\n        if (!success) {\r\n            revert TransferFailed();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw tokens from this contract\r\n     * @param amount | How much to withdraw\r\n     */\r\n    function withdraw(uint256 amount) external updateReward(msg.sender) nonReentrant {\r\n        s_totalSupply -= amount;\r\n        s_balances[msg.sender] -= amount;\r\n        emit WithdrewStake(msg.sender, amount);\r\n        bool success = s_stakingToken.transfer(msg.sender, amount);\r\n        if (!success) {\r\n            revert TransferFailed();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice User claims their tokens\r\n     */\r\n    function claimReward() external updateReward(msg.sender) nonReentrant {\r\n        uint256 reward = s_rewards[msg.sender];\r\n        s_rewards[msg.sender] = 0;\r\n        emit RewardsClaimed(msg.sender, reward);\r\n        bool success = s_rewardsToken.transfer(msg.sender, reward);\r\n        if (!success) {\r\n            revert TransferFailed();\r\n        }\r\n    }\r\n\r\n    /********************/\r\n    /* Modifiers Functions */\r\n    /********************/\r\n    modifier updateReward(address account) {\r\n        s_rewardPerTokenStored = rewardPerToken();\r\n        s_lastUpdateTime = block.timestamp;\r\n        s_rewards[account] = earned(account);\r\n        s_userRewardPerTokenPaid[account] = s_rewardPerTokenStored;\r\n        _;\r\n    }\r\n\r\n    modifier moreThanZero(uint256 amount) {\r\n        if (amount == 0) {\r\n            revert NeedsMoreThanZero();\r\n        }\r\n        _;\r\n    }\r\n\r\n    /********************/\r\n    /* Getter Functions */\r\n    /********************/\r\n    // Ideally, we'd have getter functions for all our s_ variables we want exposed, and set them all to private.\r\n    // But, for the purpose of this demo, we've left them public for simplicity.\r\n\r\n    function getStaked(address account) public view returns (uint256) {\r\n        return s_balances[account];\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Test_1/Staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NeedsMoreThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrewStake",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REWARD_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"stake(uint256)": {
								"params": {
									"amount": "| How much to stake"
								}
							},
							"withdraw(uint256)": {
								"params": {
									"amount": "| How much to withdraw"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test_1/Staking.sol\":309:4496  contract Staking is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Test_1/Staking.sol\":1234:1394  constructor(address stakingToken, address rewardsToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Test_1/Staking.sol\":1325:1337  stakingToken */\n  dup2\n    /* \"contracts/Test_1/Staking.sol\":1301:1315  s_stakingToken */\n  0x02\n  0x00\n    /* \"contracts/Test_1/Staking.sol\":1301:1338  s_stakingToken = IERC20(stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Test_1/Staking.sol\":1373:1385  rewardsToken */\n  dup1\n    /* \"contracts/Test_1/Staking.sol\":1349:1363  s_rewardsToken */\n  0x01\n  0x00\n    /* \"contracts/Test_1/Staking.sol\":1349:1386  s_rewardsToken = IERC20(rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Test_1/Staking.sol\":1234:1394  constructor(address stakingToken, address rewardsToken) {... */\n  pop\n  pop\n    /* \"contracts/Test_1/Staking.sol\":309:4496  contract Staking is ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":949:1068   */\ntag_29:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_31\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_32\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Test_1/Staking.sol\":309:4496  contract Staking is ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Test_1/Staking.sol\":309:4496  contract Staking is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa694fc3a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb88a802f\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbea08151\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf245ace4\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xab32eb69\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xadca9b72\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x304ac91b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x304ac91b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x399080ec\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5997bb37\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6aa0838f\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0bd21c56\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Test_1/Staking.sol\":1901:2128  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":352:380  IERC20 public s_rewardsToken */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":2797:3155  function withdraw(uint256 amount) external updateReward(msg.sender) nonReentrant {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Test_1/Staking.sol\":767:804  uint256 public s_rewardPerTokenStored */\n    tag_6:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":4382:4493  function getStaked(address account) public view returns (uint256) {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":681:722  uint256 public constant REWARD_RATE = 100 */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":729:760  uint256 public s_lastUpdateTime */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":2246:2675  function stake(uint256 amount)... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/Test_1/Staking.sol\":968:1013  mapping(address => uint256) public s_balances */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":387:415  IERC20 public s_stakingToken */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":3222:3578  function claimReward() external updateReward(msg.sender) nonReentrant {... */\n    tag_13:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/Test_1/Staking.sol\":879:923  mapping(address => uint256) public s_rewards */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":1525:1825  function rewardPerToken() public view returns (uint256) {... */\n    tag_15:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":813:872  mapping(address => uint256) public s_userRewardPerTokenPaid */\n    tag_16:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Test_1/Staking.sol\":1901:2128  function earned(address account) public view returns (uint256) {... */\n    tag_23:\n        /* \"contracts/Test_1/Staking.sol\":1955:1962  uint256 */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2102:2111  s_rewards */\n      0x06\n        /* \"contracts/Test_1/Staking.sol\":2102:2120  s_rewards[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2112:2119  account */\n      dup4\n        /* \"contracts/Test_1/Staking.sol\":2102:2120  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test_1/Staking.sol\":2094:2098  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Test_1/Staking.sol\":2039:2063  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Test_1/Staking.sol\":2039:2072  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2064:2071  account */\n      dup6\n        /* \"contracts/Test_1/Staking.sol\":2039:2072  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test_1/Staking.sol\":2020:2036  rewardPerToken() */\n      tag_71\n        /* \"contracts/Test_1/Staking.sol\":2020:2034  rewardPerToken */\n      tag_64\n        /* \"contracts/Test_1/Staking.sol\":2020:2036  rewardPerToken() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/Test_1/Staking.sol\":2020:2072  rewardPerToken() - s_userRewardPerTokenPaid[account] */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/Test_1/Staking.sol\":1997:2007  s_balances */\n      0x08\n        /* \"contracts/Test_1/Staking.sol\":1997:2016  s_balances[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2008:2015  account */\n      dup7\n        /* \"contracts/Test_1/Staking.sol\":1997:2016  s_balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test_1/Staking.sol\":1997:2073  s_balances[account] * (rewardPerToken() - s_userRewardPerTokenPaid[account]) */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/Test_1/Staking.sol\":1996:2098  (s_balances[account] * (rewardPerToken() - s_userRewardPerTokenPaid[account])) /... */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/Test_1/Staking.sol\":1995:2120  ((s_balances[account] * (rewardPerToken() - s_userRewardPerTokenPaid[account])) /... */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/Test_1/Staking.sol\":1975:2120  return... */\n      swap1\n      pop\n        /* \"contracts/Test_1/Staking.sol\":1901:2128  function earned(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":352:380  IERC20 public s_rewardsToken */\n    tag_27:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":2797:3155  function withdraw(uint256 amount) external updateReward(msg.sender) nonReentrant {... */\n    tag_33:\n        /* \"contracts/Test_1/Staking.sol\":2853:2863  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":3748:3764  rewardPerToken() */\n      tag_81\n        /* \"contracts/Test_1/Staking.sol\":3748:3762  rewardPerToken */\n      tag_64\n        /* \"contracts/Test_1/Staking.sol\":3748:3764  rewardPerToken() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Test_1/Staking.sol\":3723:3745  s_rewardPerTokenStored */\n      0x04\n        /* \"contracts/Test_1/Staking.sol\":3723:3764  s_rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3794:3809  block.timestamp */\n      timestamp\n        /* \"contracts/Test_1/Staking.sol\":3775:3791  s_lastUpdateTime */\n      0x03\n        /* \"contracts/Test_1/Staking.sol\":3775:3809  s_lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3841:3856  earned(account) */\n      tag_82\n        /* \"contracts/Test_1/Staking.sol\":3848:3855  account */\n      dup2\n        /* \"contracts/Test_1/Staking.sol\":3841:3847  earned */\n      tag_23\n        /* \"contracts/Test_1/Staking.sol\":3841:3856  earned(account) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/Test_1/Staking.sol\":3820:3829  s_rewards */\n      0x06\n        /* \"contracts/Test_1/Staking.sol\":3820:3838  s_rewards[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3830:3837  account */\n      dup4\n        /* \"contracts/Test_1/Staking.sol\":3820:3838  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test_1/Staking.sol\":3820:3856  s_rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3903:3925  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Test_1/Staking.sol\":3867:3891  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Test_1/Staking.sol\":3867:3900  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3892:3899  account */\n      dup4\n        /* \"contracts/Test_1/Staking.sol\":3867:3900  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test_1/Staking.sol\":3867:3925  s_userRewardPerTokenPaid[account] = s_rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":2906:2912  amount */\n      dup2\n        /* \"contracts/Test_1/Staking.sol\":2889:2902  s_totalSupply */\n      0x07\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2889:2912  s_totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_88\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_88:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":2949:2955  amount */\n      dup2\n        /* \"contracts/Test_1/Staking.sol\":2923:2933  s_balances */\n      0x08\n        /* \"contracts/Test_1/Staking.sol\":2923:2945  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2934:2944  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":2923:2945  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2923:2955  s_balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_89\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_89:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":2997:3003  amount */\n      dup2\n        /* \"contracts/Test_1/Staking.sol\":2985:2995  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":2971:3004  WithdrewStake(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4cb6da433ea55f6e302b7bdbfeed740816a42301cde7f5bac5dff2b340376374\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Test_1/Staking.sol\":3015:3027  bool success */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3030:3044  s_stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test_1/Staking.sol\":3030:3053  s_stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Test_1/Staking.sol\":3054:3064  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":3066:3072  amount */\n      dup6\n        /* \"contracts/Test_1/Staking.sol\":3030:3073  s_stakingToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/Test_1/Staking.sol\":3015:3073  bool success = s_stakingToken.transfer(msg.sender, amount) */\n      swap1\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3089:3096  success */\n      dup1\n        /* \"contracts/Test_1/Staking.sol\":3084:3148  if (!success) {... */\n      tag_96\n      jumpi\n        /* \"contracts/Test_1/Staking.sol\":3120:3136  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test_1/Staking.sol\":3084:3148  if (!success) {... */\n    tag_96:\n        /* \"contracts/Test_1/Staking.sol\":2878:3155  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":2797:3155  function withdraw(uint256 amount) external updateReward(msg.sender) nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":767:804  uint256 public s_rewardPerTokenStored */\n    tag_35:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":4382:4493  function getStaked(address account) public view returns (uint256) {... */\n    tag_39:\n        /* \"contracts/Test_1/Staking.sol\":4439:4446  uint256 */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":4466:4476  s_balances */\n      0x08\n        /* \"contracts/Test_1/Staking.sol\":4466:4485  s_balances[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":4477:4484  account */\n      dup4\n        /* \"contracts/Test_1/Staking.sol\":4466:4485  s_balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test_1/Staking.sol\":4459:4485  return s_balances[account] */\n      swap1\n      pop\n        /* \"contracts/Test_1/Staking.sol\":4382:4493  function getStaked(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":681:722  uint256 public constant REWARD_RATE = 100 */\n    tag_42:\n        /* \"contracts/Test_1/Staking.sol\":719:722  100 */\n      0x64\n        /* \"contracts/Test_1/Staking.sol\":681:722  uint256 public constant REWARD_RATE = 100 */\n      dup2\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":729:760  uint256 public s_lastUpdateTime */\n    tag_45:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":2246:2675  function stake(uint256 amount)... */\n    tag_49:\n        /* \"contracts/Test_1/Staking.sol\":2317:2327  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":3748:3764  rewardPerToken() */\n      tag_99\n        /* \"contracts/Test_1/Staking.sol\":3748:3762  rewardPerToken */\n      tag_64\n        /* \"contracts/Test_1/Staking.sol\":3748:3764  rewardPerToken() */\n      jump\t// in\n    tag_99:\n        /* \"contracts/Test_1/Staking.sol\":3723:3745  s_rewardPerTokenStored */\n      0x04\n        /* \"contracts/Test_1/Staking.sol\":3723:3764  s_rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3794:3809  block.timestamp */\n      timestamp\n        /* \"contracts/Test_1/Staking.sol\":3775:3791  s_lastUpdateTime */\n      0x03\n        /* \"contracts/Test_1/Staking.sol\":3775:3809  s_lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3841:3856  earned(account) */\n      tag_100\n        /* \"contracts/Test_1/Staking.sol\":3848:3855  account */\n      dup2\n        /* \"contracts/Test_1/Staking.sol\":3841:3847  earned */\n      tag_23\n        /* \"contracts/Test_1/Staking.sol\":3841:3856  earned(account) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/Test_1/Staking.sol\":3820:3829  s_rewards */\n      0x06\n        /* \"contracts/Test_1/Staking.sol\":3820:3838  s_rewards[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3830:3837  account */\n      dup4\n        /* \"contracts/Test_1/Staking.sol\":3820:3838  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test_1/Staking.sol\":3820:3856  s_rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3903:3925  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Test_1/Staking.sol\":3867:3891  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Test_1/Staking.sol\":3867:3900  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3892:3899  account */\n      dup4\n        /* \"contracts/Test_1/Staking.sol\":3867:3900  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test_1/Staking.sol\":3867:3925  s_userRewardPerTokenPaid[account] = s_rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_86\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":2373:2379  amount */\n      dup2\n        /* \"contracts/Test_1/Staking.sol\":4016:4017  0 */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":4006:4012  amount */\n      dup2\n        /* \"contracts/Test_1/Staking.sol\":4006:4017  amount == 0 */\n      eq\n        /* \"contracts/Test_1/Staking.sol\":4002:4072  if (amount == 0) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"contracts/Test_1/Staking.sol\":4041:4060  NeedsMoreThanZero() */\n      mload(0x40)\n      0xf45911f000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test_1/Staking.sol\":4002:4072  if (amount == 0) {... */\n    tag_105:\n        /* \"contracts/Test_1/Staking.sol\":2414:2420  amount */\n      dup3\n        /* \"contracts/Test_1/Staking.sol\":2397:2410  s_totalSupply */\n      0x07\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2397:2420  s_totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_107:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":2457:2463  amount */\n      dup3\n        /* \"contracts/Test_1/Staking.sol\":2431:2441  s_balances */\n      0x08\n        /* \"contracts/Test_1/Staking.sol\":2431:2453  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2442:2452  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":2431:2453  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2431:2463  s_balances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_108\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_108:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":2498:2504  amount */\n      dup3\n        /* \"contracts/Test_1/Staking.sol\":2486:2496  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":2479:2505  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Test_1/Staking.sol\":2516:2528  bool success */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":2531:2545  s_stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test_1/Staking.sol\":2531:2558  s_stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Test_1/Staking.sol\":2559:2569  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":2579:2583  this */\n      address\n        /* \"contracts/Test_1/Staking.sol\":2586:2592  amount */\n      dup8\n        /* \"contracts/Test_1/Staking.sol\":2531:2593  s_stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_113:\n        /* \"contracts/Test_1/Staking.sol\":2516:2593  bool success = s_stakingToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"contracts/Test_1/Staking.sol\":2609:2616  success */\n      dup1\n        /* \"contracts/Test_1/Staking.sol\":2604:2668  if (!success) {... */\n      tag_114\n      jumpi\n        /* \"contracts/Test_1/Staking.sol\":2640:2656  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test_1/Staking.sol\":2604:2668  if (!success) {... */\n    tag_114:\n        /* \"contracts/Test_1/Staking.sol\":2386:2675  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2484:2485  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":2246:2675  function stake(uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":968:1013  mapping(address => uint256) public s_balances */\n    tag_52:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":387:415  IERC20 public s_stakingToken */\n    tag_55:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":3222:3578  function claimReward() external updateReward(msg.sender) nonReentrant {... */\n    tag_58:\n        /* \"contracts/Test_1/Staking.sol\":3267:3277  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":3748:3764  rewardPerToken() */\n      tag_116\n        /* \"contracts/Test_1/Staking.sol\":3748:3762  rewardPerToken */\n      tag_64\n        /* \"contracts/Test_1/Staking.sol\":3748:3764  rewardPerToken() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/Test_1/Staking.sol\":3723:3745  s_rewardPerTokenStored */\n      0x04\n        /* \"contracts/Test_1/Staking.sol\":3723:3764  s_rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3794:3809  block.timestamp */\n      timestamp\n        /* \"contracts/Test_1/Staking.sol\":3775:3791  s_lastUpdateTime */\n      0x03\n        /* \"contracts/Test_1/Staking.sol\":3775:3809  s_lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3841:3856  earned(account) */\n      tag_117\n        /* \"contracts/Test_1/Staking.sol\":3848:3855  account */\n      dup2\n        /* \"contracts/Test_1/Staking.sol\":3841:3847  earned */\n      tag_23\n        /* \"contracts/Test_1/Staking.sol\":3841:3856  earned(account) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Test_1/Staking.sol\":3820:3829  s_rewards */\n      0x06\n        /* \"contracts/Test_1/Staking.sol\":3820:3838  s_rewards[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3830:3837  account */\n      dup4\n        /* \"contracts/Test_1/Staking.sol\":3820:3838  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test_1/Staking.sol\":3820:3856  s_rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3903:3925  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Test_1/Staking.sol\":3867:3891  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Test_1/Staking.sol\":3867:3900  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3892:3899  account */\n      dup4\n        /* \"contracts/Test_1/Staking.sol\":3867:3900  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test_1/Staking.sol\":3867:3925  s_userRewardPerTokenPaid[account] = s_rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_86\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3303:3317  uint256 reward */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3320:3329  s_rewards */\n      0x06\n        /* \"contracts/Test_1/Staking.sol\":3320:3341  s_rewards[msg.sender] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3330:3340  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":3320:3341  s_rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Test_1/Staking.sol\":3303:3341  uint256 reward = s_rewards[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3376:3377  0 */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3352:3361  s_rewards */\n      0x06\n        /* \"contracts/Test_1/Staking.sol\":3352:3373  s_rewards[msg.sender] */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3362:3372  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":3352:3373  s_rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Test_1/Staking.sol\":3352:3377  s_rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3420:3426  reward */\n      dup1\n        /* \"contracts/Test_1/Staking.sol\":3408:3418  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":3393:3427  RewardsClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Test_1/Staking.sol\":3438:3450  bool success */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":3453:3467  s_rewardsToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Test_1/Staking.sol\":3453:3476  s_rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Test_1/Staking.sol\":3477:3487  msg.sender */\n      caller\n        /* \"contracts/Test_1/Staking.sol\":3489:3495  reward */\n      dup5\n        /* \"contracts/Test_1/Staking.sol\":3453:3496  s_rewardsToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_122:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_125:\n        /* \"contracts/Test_1/Staking.sol\":3438:3496  bool success = s_rewardsToken.transfer(msg.sender, reward) */\n      swap1\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3512:3519  success */\n      dup1\n        /* \"contracts/Test_1/Staking.sol\":3507:3571  if (!success) {... */\n      tag_126\n      jumpi\n        /* \"contracts/Test_1/Staking.sol\":3543:3559  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Test_1/Staking.sol\":3507:3571  if (!success) {... */\n    tag_126:\n        /* \"contracts/Test_1/Staking.sol\":3292:3578  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Test_1/Staking.sol\":3222:3578  function claimReward() external updateReward(msg.sender) nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":879:923  mapping(address => uint256) public s_rewards */\n    tag_61:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":1525:1825  function rewardPerToken() public view returns (uint256) {... */\n    tag_64:\n        /* \"contracts/Test_1/Staking.sol\":1572:1579  uint256 */\n      0x00\n        /* \"contracts/Test_1/Staking.sol\":1613:1614  0 */\n      dup1\n        /* \"contracts/Test_1/Staking.sol\":1596:1609  s_totalSupply */\n      sload(0x07)\n        /* \"contracts/Test_1/Staking.sol\":1596:1614  s_totalSupply == 0 */\n      eq\n        /* \"contracts/Test_1/Staking.sol\":1592:1672  if (s_totalSupply == 0) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"contracts/Test_1/Staking.sol\":1638:1660  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Test_1/Staking.sol\":1631:1660  return s_rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_127)\n        /* \"contracts/Test_1/Staking.sol\":1592:1672  if (s_totalSupply == 0) {... */\n    tag_128:\n        /* \"contracts/Test_1/Staking.sol\":1803:1816  s_totalSupply */\n      sload(0x07)\n        /* \"contracts/Test_1/Staking.sol\":1795:1799  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Test_1/Staking.sol\":719:722  100 */\n      0x64\n        /* \"contracts/Test_1/Staking.sol\":1761:1777  s_lastUpdateTime */\n      sload(0x03)\n        /* \"contracts/Test_1/Staking.sol\":1743:1758  block.timestamp */\n      timestamp\n        /* \"contracts/Test_1/Staking.sol\":1743:1777  block.timestamp - s_lastUpdateTime */\n      tag_129\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_129:\n        /* \"contracts/Test_1/Staking.sol\":1742:1792  (block.timestamp - s_lastUpdateTime) * REWARD_RATE */\n      tag_130\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_130:\n        /* \"contracts/Test_1/Staking.sol\":1742:1799  (block.timestamp - s_lastUpdateTime) * REWARD_RATE * 1e18 */\n      tag_131\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_131:\n        /* \"contracts/Test_1/Staking.sol\":1741:1816  ((block.timestamp - s_lastUpdateTime) * REWARD_RATE * 1e18) / s_totalSupply */\n      tag_132\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_132:\n        /* \"contracts/Test_1/Staking.sol\":1702:1724  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Test_1/Staking.sol\":1702:1817  s_rewardPerTokenStored +... */\n      tag_133\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_133:\n        /* \"contracts/Test_1/Staking.sol\":1682:1817  return... */\n      swap1\n      pop\n        /* \"contracts/Test_1/Staking.sol\":1525:1825  function rewardPerToken() public view returns (uint256) {... */\n    tag_127:\n      swap1\n      jump\t// out\n        /* \"contracts/Test_1/Staking.sol\":813:872  mapping(address => uint256) public s_userRewardPerTokenPaid */\n    tag_68:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_135:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_137:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_138:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_165\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_137\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_139:\n        /* \"#utility.yul\":641:665   */\n      tag_167\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_138\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_168:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_140:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_170\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_139\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_22:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_173\n      tag_135\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":917:1036   */\n    tag_172:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_174\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_140\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_141:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_142:\n        /* \"#utility.yul\":1346:1370   */\n      tag_177\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_141\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_25:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_179\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_142\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1671   */\n    tag_143:\n        /* \"#utility.yul\":1639:1642   */\n      0x00\n        /* \"#utility.yul\":1660:1665   */\n      dup2\n        /* \"#utility.yul\":1653:1665   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1819   */\n    tag_144:\n        /* \"#utility.yul\":1727:1736   */\n      0x00\n        /* \"#utility.yul\":1760:1813   */\n      tag_182\n        /* \"#utility.yul\":1778:1812   */\n      tag_183\n        /* \"#utility.yul\":1787:1811   */\n      tag_184\n        /* \"#utility.yul\":1805:1810   */\n      dup5\n        /* \"#utility.yul\":1787:1811   */\n      tag_137\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1778:1812   */\n      tag_143\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1760:1813   */\n      tag_137\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1747:1813   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:1951   */\n    tag_145:\n        /* \"#utility.yul\":1875:1884   */\n      0x00\n        /* \"#utility.yul\":1908:1945   */\n      tag_186\n        /* \"#utility.yul\":1939:1944   */\n      dup3\n        /* \"#utility.yul\":1908:1945   */\n      tag_144\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1895:1945   */\n      swap1\n      pop\n        /* \"#utility.yul\":1825:1951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2097   */\n    tag_146:\n        /* \"#utility.yul\":2021:2030   */\n      0x00\n        /* \"#utility.yul\":2054:2091   */\n      tag_188\n        /* \"#utility.yul\":2085:2090   */\n      dup3\n        /* \"#utility.yul\":2054:2091   */\n      tag_145\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2041:2091   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2103:2262   */\n    tag_147:\n        /* \"#utility.yul\":2204:2255   */\n      tag_190\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2204:2255   */\n      tag_146\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2199:2202   */\n      dup3\n        /* \"#utility.yul\":2192:2256   */\n      mstore\n        /* \"#utility.yul\":2103:2262   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2518   */\n    tag_29:\n        /* \"#utility.yul\":2375:2379   */\n      0x00\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2402:2411   */\n      dup3\n        /* \"#utility.yul\":2398:2416   */\n      add\n        /* \"#utility.yul\":2390:2416   */\n      swap1\n      pop\n        /* \"#utility.yul\":2426:2511   */\n      tag_192\n        /* \"#utility.yul\":2508:2509   */\n      0x00\n        /* \"#utility.yul\":2497:2506   */\n      dup4\n        /* \"#utility.yul\":2493:2510   */\n      add\n        /* \"#utility.yul\":2484:2490   */\n      dup5\n        /* \"#utility.yul\":2426:2511   */\n      tag_147\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2268:2518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2646   */\n    tag_148:\n        /* \"#utility.yul\":2597:2621   */\n      tag_194\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2597:2621   */\n      tag_141\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2590:2595   */\n      dup2\n        /* \"#utility.yul\":2587:2622   */\n      eq\n        /* \"#utility.yul\":2577:2640   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2626:2638   */\n      revert\n        /* \"#utility.yul\":2577:2640   */\n    tag_195:\n        /* \"#utility.yul\":2524:2646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2791   */\n    tag_149:\n        /* \"#utility.yul\":2698:2703   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup2\n        /* \"#utility.yul\":2723:2743   */\n      calldataload\n        /* \"#utility.yul\":2714:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2785   */\n      tag_197\n        /* \"#utility.yul\":2779:2784   */\n      dup2\n        /* \"#utility.yul\":2752:2785   */\n      tag_148\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2652:2791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:3126   */\n    tag_32:\n        /* \"#utility.yul\":2856:2862   */\n      0x00\n        /* \"#utility.yul\":2905:2907   */\n      0x20\n        /* \"#utility.yul\":2893:2902   */\n      dup3\n        /* \"#utility.yul\":2884:2891   */\n      dup5\n        /* \"#utility.yul\":2880:2903   */\n      sub\n        /* \"#utility.yul\":2876:2908   */\n      slt\n        /* \"#utility.yul\":2873:2992   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":2911:2990   */\n      tag_200\n      tag_135\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2873:2992   */\n    tag_199:\n        /* \"#utility.yul\":3031:3032   */\n      0x00\n        /* \"#utility.yul\":3056:3109   */\n      tag_201\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3092:3098   */\n      dup3\n        /* \"#utility.yul\":3081:3090   */\n      dup6\n        /* \"#utility.yul\":3077:3099   */\n      add\n        /* \"#utility.yul\":3056:3109   */\n      tag_149\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3046:3109   */\n      swap2\n      pop\n        /* \"#utility.yul\":3002:3119   */\n      pop\n        /* \"#utility.yul\":2797:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3312   */\n    tag_150:\n        /* \"#utility.yul\":3180:3257   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3177:3178   */\n      0x00\n        /* \"#utility.yul\":3170:3258   */\n      mstore\n        /* \"#utility.yul\":3277:3281   */\n      0x11\n        /* \"#utility.yul\":3274:3275   */\n      0x04\n        /* \"#utility.yul\":3267:3282   */\n      mstore\n        /* \"#utility.yul\":3301:3305   */\n      0x24\n        /* \"#utility.yul\":3298:3299   */\n      0x00\n        /* \"#utility.yul\":3291:3306   */\n      revert\n        /* \"#utility.yul\":3318:3509   */\n    tag_73:\n        /* \"#utility.yul\":3358:3362   */\n      0x00\n        /* \"#utility.yul\":3378:3398   */\n      tag_204\n        /* \"#utility.yul\":3396:3397   */\n      dup3\n        /* \"#utility.yul\":3378:3398   */\n      tag_141\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3373:3398   */\n      swap2\n      pop\n        /* \"#utility.yul\":3412:3432   */\n      tag_205\n        /* \"#utility.yul\":3430:3431   */\n      dup4\n        /* \"#utility.yul\":3412:3432   */\n      tag_141\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3407:3432   */\n      swap3\n      pop\n        /* \"#utility.yul\":3451:3452   */\n      dup3\n        /* \"#utility.yul\":3448:3449   */\n      dup3\n        /* \"#utility.yul\":3445:3453   */\n      lt\n        /* \"#utility.yul\":3442:3476   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":3456:3474   */\n      tag_207\n      tag_150\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3442:3476   */\n    tag_206:\n        /* \"#utility.yul\":3501:3502   */\n      dup3\n        /* \"#utility.yul\":3498:3499   */\n      dup3\n        /* \"#utility.yul\":3494:3503   */\n      sub\n        /* \"#utility.yul\":3486:3503   */\n      swap1\n      pop\n        /* \"#utility.yul\":3318:3509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3515:3863   */\n    tag_75:\n        /* \"#utility.yul\":3555:3562   */\n      0x00\n        /* \"#utility.yul\":3578:3598   */\n      tag_209\n        /* \"#utility.yul\":3596:3597   */\n      dup3\n        /* \"#utility.yul\":3578:3598   */\n      tag_141\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3573:3598   */\n      swap2\n      pop\n        /* \"#utility.yul\":3612:3632   */\n      tag_210\n        /* \"#utility.yul\":3630:3631   */\n      dup4\n        /* \"#utility.yul\":3612:3632   */\n      tag_141\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3607:3632   */\n      swap3\n      pop\n        /* \"#utility.yul\":3800:3801   */\n      dup2\n        /* \"#utility.yul\":3732:3798   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3728:3802   */\n      div\n        /* \"#utility.yul\":3725:3726   */\n      dup4\n        /* \"#utility.yul\":3722:3803   */\n      gt\n        /* \"#utility.yul\":3717:3718   */\n      dup3\n        /* \"#utility.yul\":3710:3719   */\n      iszero\n        /* \"#utility.yul\":3703:3720   */\n      iszero\n        /* \"#utility.yul\":3699:3804   */\n      and\n        /* \"#utility.yul\":3696:3827   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3807:3825   */\n      tag_212\n      tag_150\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3696:3827   */\n    tag_211:\n        /* \"#utility.yul\":3855:3856   */\n      dup3\n        /* \"#utility.yul\":3852:3853   */\n      dup3\n        /* \"#utility.yul\":3848:3857   */\n      mul\n        /* \"#utility.yul\":3837:3857   */\n      swap1\n      pop\n        /* \"#utility.yul\":3515:3863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3869:4049   */\n    tag_151:\n        /* \"#utility.yul\":3917:3994   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3914:3915   */\n      0x00\n        /* \"#utility.yul\":3907:3995   */\n      mstore\n        /* \"#utility.yul\":4014:4018   */\n      0x12\n        /* \"#utility.yul\":4011:4012   */\n      0x04\n        /* \"#utility.yul\":4004:4019   */\n      mstore\n        /* \"#utility.yul\":4038:4042   */\n      0x24\n        /* \"#utility.yul\":4035:4036   */\n      0x00\n        /* \"#utility.yul\":4028:4043   */\n      revert\n        /* \"#utility.yul\":4055:4240   */\n    tag_77:\n        /* \"#utility.yul\":4095:4096   */\n      0x00\n        /* \"#utility.yul\":4112:4132   */\n      tag_215\n        /* \"#utility.yul\":4130:4131   */\n      dup3\n        /* \"#utility.yul\":4112:4132   */\n      tag_141\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4107:4132   */\n      swap2\n      pop\n        /* \"#utility.yul\":4146:4166   */\n      tag_216\n        /* \"#utility.yul\":4164:4165   */\n      dup4\n        /* \"#utility.yul\":4146:4166   */\n      tag_141\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4141:4166   */\n      swap3\n      pop\n        /* \"#utility.yul\":4185:4186   */\n      dup3\n        /* \"#utility.yul\":4175:4210   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":4190:4208   */\n      tag_218\n      tag_151\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4175:4210   */\n    tag_217:\n        /* \"#utility.yul\":4232:4233   */\n      dup3\n        /* \"#utility.yul\":4229:4230   */\n      dup3\n        /* \"#utility.yul\":4225:4234   */\n      div\n        /* \"#utility.yul\":4220:4234   */\n      swap1\n      pop\n        /* \"#utility.yul\":4055:4240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4246:4551   */\n    tag_79:\n        /* \"#utility.yul\":4286:4289   */\n      0x00\n        /* \"#utility.yul\":4305:4325   */\n      tag_220\n        /* \"#utility.yul\":4323:4324   */\n      dup3\n        /* \"#utility.yul\":4305:4325   */\n      tag_141\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4300:4325   */\n      swap2\n      pop\n        /* \"#utility.yul\":4339:4359   */\n      tag_221\n        /* \"#utility.yul\":4357:4358   */\n      dup4\n        /* \"#utility.yul\":4339:4359   */\n      tag_141\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4334:4359   */\n      swap3\n      pop\n        /* \"#utility.yul\":4493:4494   */\n      dup3\n        /* \"#utility.yul\":4425:4491   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4421:4495   */\n      sub\n        /* \"#utility.yul\":4418:4419   */\n      dup3\n        /* \"#utility.yul\":4415:4496   */\n      gt\n        /* \"#utility.yul\":4412:4519   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":4499:4517   */\n      tag_223\n      tag_150\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4412:4519   */\n    tag_222:\n        /* \"#utility.yul\":4543:4544   */\n      dup3\n        /* \"#utility.yul\":4540:4541   */\n      dup3\n        /* \"#utility.yul\":4536:4545   */\n      add\n        /* \"#utility.yul\":4529:4545   */\n      swap1\n      pop\n        /* \"#utility.yul\":4246:4551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4557:4726   */\n    tag_152:\n        /* \"#utility.yul\":4641:4652   */\n      0x00\n        /* \"#utility.yul\":4675:4681   */\n      dup3\n        /* \"#utility.yul\":4670:4673   */\n      dup3\n        /* \"#utility.yul\":4663:4682   */\n      mstore\n        /* \"#utility.yul\":4715:4719   */\n      0x20\n        /* \"#utility.yul\":4710:4713   */\n      dup3\n        /* \"#utility.yul\":4706:4720   */\n      add\n        /* \"#utility.yul\":4691:4720   */\n      swap1\n      pop\n        /* \"#utility.yul\":4557:4726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4732:4913   */\n    tag_153:\n        /* \"#utility.yul\":4872:4905   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4868:4869   */\n      0x00\n        /* \"#utility.yul\":4860:4866   */\n      dup3\n        /* \"#utility.yul\":4856:4870   */\n      add\n        /* \"#utility.yul\":4849:4906   */\n      mstore\n        /* \"#utility.yul\":4732:4913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4919:5285   */\n    tag_154:\n        /* \"#utility.yul\":5061:5064   */\n      0x00\n        /* \"#utility.yul\":5082:5149   */\n      tag_227\n        /* \"#utility.yul\":5146:5148   */\n      0x1f\n        /* \"#utility.yul\":5141:5144   */\n      dup4\n        /* \"#utility.yul\":5082:5149   */\n      tag_152\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5075:5149   */\n      swap2\n      pop\n        /* \"#utility.yul\":5158:5251   */\n      tag_228\n        /* \"#utility.yul\":5247:5250   */\n      dup3\n        /* \"#utility.yul\":5158:5251   */\n      tag_153\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5276:5278   */\n      0x20\n        /* \"#utility.yul\":5271:5274   */\n      dup3\n        /* \"#utility.yul\":5267:5279   */\n      add\n        /* \"#utility.yul\":5260:5279   */\n      swap1\n      pop\n        /* \"#utility.yul\":4919:5285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5291:5710   */\n    tag_86:\n        /* \"#utility.yul\":5457:5461   */\n      0x00\n        /* \"#utility.yul\":5495:5497   */\n      0x20\n        /* \"#utility.yul\":5484:5493   */\n      dup3\n        /* \"#utility.yul\":5480:5498   */\n      add\n        /* \"#utility.yul\":5472:5498   */\n      swap1\n      pop\n        /* \"#utility.yul\":5544:5553   */\n      dup2\n        /* \"#utility.yul\":5538:5542   */\n      dup2\n        /* \"#utility.yul\":5534:5554   */\n      sub\n        /* \"#utility.yul\":5530:5531   */\n      0x00\n        /* \"#utility.yul\":5519:5528   */\n      dup4\n        /* \"#utility.yul\":5515:5532   */\n      add\n        /* \"#utility.yul\":5508:5555   */\n      mstore\n        /* \"#utility.yul\":5572:5703   */\n      tag_230\n        /* \"#utility.yul\":5698:5702   */\n      dup2\n        /* \"#utility.yul\":5572:5703   */\n      tag_154\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5564:5703   */\n      swap1\n      pop\n        /* \"#utility.yul\":5291:5710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5716:5834   */\n    tag_155:\n        /* \"#utility.yul\":5803:5827   */\n      tag_232\n        /* \"#utility.yul\":5821:5826   */\n      dup2\n        /* \"#utility.yul\":5803:5827   */\n      tag_138\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5798:5801   */\n      dup3\n        /* \"#utility.yul\":5791:5828   */\n      mstore\n        /* \"#utility.yul\":5716:5834   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5840:6172   */\n    tag_91:\n        /* \"#utility.yul\":5961:5965   */\n      0x00\n        /* \"#utility.yul\":5999:6001   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup3\n        /* \"#utility.yul\":5984:6002   */\n      add\n        /* \"#utility.yul\":5976:6002   */\n      swap1\n      pop\n        /* \"#utility.yul\":6012:6083   */\n      tag_234\n        /* \"#utility.yul\":6080:6081   */\n      0x00\n        /* \"#utility.yul\":6069:6078   */\n      dup4\n        /* \"#utility.yul\":6065:6082   */\n      add\n        /* \"#utility.yul\":6056:6062   */\n      dup6\n        /* \"#utility.yul\":6012:6083   */\n      tag_155\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6093:6165   */\n      tag_235\n        /* \"#utility.yul\":6161:6163   */\n      0x20\n        /* \"#utility.yul\":6150:6159   */\n      dup4\n        /* \"#utility.yul\":6146:6164   */\n      add\n        /* \"#utility.yul\":6137:6143   */\n      dup5\n        /* \"#utility.yul\":6093:6165   */\n      tag_142\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5840:6172   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6178:6268   */\n    tag_156:\n        /* \"#utility.yul\":6212:6219   */\n      0x00\n        /* \"#utility.yul\":6255:6260   */\n      dup2\n        /* \"#utility.yul\":6248:6261   */\n      iszero\n        /* \"#utility.yul\":6241:6262   */\n      iszero\n        /* \"#utility.yul\":6230:6262   */\n      swap1\n      pop\n        /* \"#utility.yul\":6178:6268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6274:6390   */\n    tag_157:\n        /* \"#utility.yul\":6344:6365   */\n      tag_238\n        /* \"#utility.yul\":6359:6364   */\n      dup2\n        /* \"#utility.yul\":6344:6365   */\n      tag_156\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6337:6342   */\n      dup2\n        /* \"#utility.yul\":6334:6366   */\n      eq\n        /* \"#utility.yul\":6324:6384   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6380:6381   */\n      0x00\n        /* \"#utility.yul\":6377:6378   */\n      dup1\n        /* \"#utility.yul\":6370:6382   */\n      revert\n        /* \"#utility.yul\":6324:6384   */\n    tag_239:\n        /* \"#utility.yul\":6274:6390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6396:6533   */\n    tag_158:\n        /* \"#utility.yul\":6450:6455   */\n      0x00\n        /* \"#utility.yul\":6481:6487   */\n      dup2\n        /* \"#utility.yul\":6475:6488   */\n      mload\n        /* \"#utility.yul\":6466:6488   */\n      swap1\n      pop\n        /* \"#utility.yul\":6497:6527   */\n      tag_241\n        /* \"#utility.yul\":6521:6526   */\n      dup2\n        /* \"#utility.yul\":6497:6527   */\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6396:6533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6539:6884   */\n    tag_95:\n        /* \"#utility.yul\":6606:6612   */\n      0x00\n        /* \"#utility.yul\":6655:6657   */\n      0x20\n        /* \"#utility.yul\":6643:6652   */\n      dup3\n        /* \"#utility.yul\":6634:6641   */\n      dup5\n        /* \"#utility.yul\":6630:6653   */\n      sub\n        /* \"#utility.yul\":6626:6658   */\n      slt\n        /* \"#utility.yul\":6623:6742   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":6661:6740   */\n      tag_244\n      tag_135\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6623:6742   */\n    tag_243:\n        /* \"#utility.yul\":6781:6782   */\n      0x00\n        /* \"#utility.yul\":6806:6867   */\n      tag_245\n        /* \"#utility.yul\":6859:6866   */\n      dup5\n        /* \"#utility.yul\":6850:6856   */\n      dup3\n        /* \"#utility.yul\":6839:6848   */\n      dup6\n        /* \"#utility.yul\":6835:6857   */\n      add\n        /* \"#utility.yul\":6806:6867   */\n      tag_158\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6796:6867   */\n      swap2\n      pop\n        /* \"#utility.yul\":6752:6877   */\n      pop\n        /* \"#utility.yul\":6539:6884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6890:7332   */\n    tag_110:\n        /* \"#utility.yul\":7039:7043   */\n      0x00\n        /* \"#utility.yul\":7077:7079   */\n      0x60\n        /* \"#utility.yul\":7066:7075   */\n      dup3\n        /* \"#utility.yul\":7062:7080   */\n      add\n        /* \"#utility.yul\":7054:7080   */\n      swap1\n      pop\n        /* \"#utility.yul\":7090:7161   */\n      tag_247\n        /* \"#utility.yul\":7158:7159   */\n      0x00\n        /* \"#utility.yul\":7147:7156   */\n      dup4\n        /* \"#utility.yul\":7143:7160   */\n      add\n        /* \"#utility.yul\":7134:7140   */\n      dup7\n        /* \"#utility.yul\":7090:7161   */\n      tag_155\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7171:7243   */\n      tag_248\n        /* \"#utility.yul\":7239:7241   */\n      0x20\n        /* \"#utility.yul\":7228:7237   */\n      dup4\n        /* \"#utility.yul\":7224:7242   */\n      add\n        /* \"#utility.yul\":7215:7221   */\n      dup6\n        /* \"#utility.yul\":7171:7243   */\n      tag_155\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7253:7325   */\n      tag_249\n        /* \"#utility.yul\":7321:7323   */\n      0x40\n        /* \"#utility.yul\":7310:7319   */\n      dup4\n        /* \"#utility.yul\":7306:7324   */\n      add\n        /* \"#utility.yul\":7297:7303   */\n      dup5\n        /* \"#utility.yul\":7253:7325   */\n      tag_142\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6890:7332   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204fb0c9d2ba1100d9f4fae750c870c2501ee273fad03a46f282fef75d7bd7a68e64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:3"
															},
															"nodeType": "YulIf",
															"src": "949:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:3",
														"type": ""
													}
												],
												"src": "845:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200134e3803806200134e833981810160405281019062000037919062000133565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200017a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000fb82620000ce565b9050919050565b6200010d81620000ee565b81146200011957600080fd5b50565b6000815190506200012d8162000102565b92915050565b600080604083850312156200014d576200014c620000c9565b5b60006200015d858286016200011c565b925050602062000170858286016200011c565b9150509250929050565b6111c4806200018a6000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063a694fc3a1161008c578063b88a802f11610066578063b88a802f1461024c578063bea0815114610256578063cd3daf9d14610286578063f245ace4146102a4576100e9565b8063a694fc3a146101e2578063ab32eb69146101fe578063adca9b721461022e576100e9565b8063304ac91b116100c8578063304ac91b14610158578063399080ec146101765780635997bb37146101a65780636aa0838f146101c4576100e9565b80628cc262146100ee5780630bd21c561461011e5780632e1a7d4d1461013c575b600080fd5b61010860048036038101906101039190610d96565b6102d4565b6040516101159190610ddc565b60405180910390f35b6101266103d6565b6040516101339190610e56565b60405180910390f35b61015660048036038101906101519190610e9d565b6103fc565b005b61016061068d565b60405161016d9190610ddc565b60405180910390f35b610190600480360381019061018b9190610d96565b610693565b60405161019d9190610ddc565b60405180910390f35b6101ae6106dc565b6040516101bb9190610ddc565b60405180910390f35b6101cc6106e1565b6040516101d99190610ddc565b60405180910390f35b6101fc60048036038101906101f79190610e9d565b6106e7565b005b61021860048036038101906102139190610d96565b6109b7565b6040516102259190610ddc565b60405180910390f35b6102366109cf565b6040516102439190610e56565b60405180910390f35b6102546109f5565b005b610270600480360381019061026b9190610d96565b610ca0565b60405161027d9190610ddc565b60405180910390f35b61028e610cb8565b60405161029b9190610ddc565b60405180910390f35b6102be60048036038101906102b99190610d96565b610d1b565b6040516102cb9190610ddc565b60405180910390f35b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610367610cb8565b6103719190610ef9565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103bb9190610f2d565b6103c59190610fb6565b6103cf9190610fe7565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33610405610cb8565b6004819055504260038190555061041b816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260005414156104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e19061109a565b60405180910390fd5b600260008190555081600760008282546105049190610ef9565b9250508190555081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055a9190610ef9565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167f4cb6da433ea55f6e302b7bdbfeed740816a42301cde7f5bac5dff2b34037637460405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016106049291906110c9565b6020604051808303816000875af1158015610623573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610647919061112a565b905080610680576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060016000819055505050565b60045481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606481565b60035481565b336106f0610cb8565b60048190555042600381905550610706816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260005414156107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc9061109a565b60405180910390fd5b6002600081905550816000811415610819576040517ff45911f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826007600082825461082b9190610fe7565b9250508190555082600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108819190610fe7565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d60405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161092d93929190611157565b6020604051808303816000875af115801561094c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610970919061112a565b9050806109a9576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505060016000819055505050565b60086020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b336109fe610cb8565b60048190555042600381905550610a14816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060026000541415610ae3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ada9061109a565b60405180910390fd5b60026000819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550803373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60405160405180910390a36000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610c179291906110c9565b6020604051808303816000875af1158015610c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5a919061112a565b905080610c93576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600160008190555050565b60066020528060005260406000206000915090505481565b6000806007541415610cce576004549050610d18565b600754670de0b6b3a7640000606460035442610cea9190610ef9565b610cf49190610f2d565b610cfe9190610f2d565b610d089190610fb6565b600454610d159190610fe7565b90505b90565b60056020528060005260406000206000915090505481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d6382610d38565b9050919050565b610d7381610d58565b8114610d7e57600080fd5b50565b600081359050610d9081610d6a565b92915050565b600060208284031215610dac57610dab610d33565b5b6000610dba84828501610d81565b91505092915050565b6000819050919050565b610dd681610dc3565b82525050565b6000602082019050610df16000830184610dcd565b92915050565b6000819050919050565b6000610e1c610e17610e1284610d38565b610df7565b610d38565b9050919050565b6000610e2e82610e01565b9050919050565b6000610e4082610e23565b9050919050565b610e5081610e35565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b610e7a81610dc3565b8114610e8557600080fd5b50565b600081359050610e9781610e71565b92915050565b600060208284031215610eb357610eb2610d33565b5b6000610ec184828501610e88565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f0482610dc3565b9150610f0f83610dc3565b925082821015610f2257610f21610eca565b5b828203905092915050565b6000610f3882610dc3565b9150610f4383610dc3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f7c57610f7b610eca565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fc182610dc3565b9150610fcc83610dc3565b925082610fdc57610fdb610f87565b5b828204905092915050565b6000610ff282610dc3565b9150610ffd83610dc3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561103257611031610eca565b5b828201905092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611084601f8361103d565b915061108f8261104e565b602082019050919050565b600060208201905081810360008301526110b381611077565b9050919050565b6110c381610d58565b82525050565b60006040820190506110de60008301856110ba565b6110eb6020830184610dcd565b9392505050565b60008115159050919050565b611107816110f2565b811461111257600080fd5b50565b600081519050611124816110fe565b92915050565b6000602082840312156111405761113f610d33565b5b600061114e84828501611115565b91505092915050565b600060608201905061116c60008301866110ba565b61117960208301856110ba565b6111866040830184610dcd565b94935050505056fea26469706673582212204fb0c9d2ba1100d9f4fae750c870c2501ee273fad03a46f282fef75d7bd7a68e64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x134E CODESIZE SUB DUP1 PUSH3 0x134E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x133 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x17A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFB DUP3 PUSH3 0xCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10D DUP2 PUSH3 0xEE JUMP JUMPDEST DUP2 EQ PUSH3 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x12D DUP2 PUSH3 0x102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x14D JUMPI PUSH3 0x14C PUSH3 0xC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x15D DUP6 DUP3 DUP7 ADD PUSH3 0x11C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x170 DUP6 DUP3 DUP7 ADD PUSH3 0x11C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C4 DUP1 PUSH3 0x18A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xF245ACE4 EQ PUSH2 0x2A4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x22E JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x304AC91B GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x399080EC EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6AA0838F EQ PUSH2 0x1C4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xBD21C56 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH2 0x9F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x367 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x371 SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH2 0x405 PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x41B DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4CB6DA433EA55F6E302B7BDBFEED740816A42301CDE7F5BAC5DFF2B340376374 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP3 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x623 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x6F0 PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x706 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF45911F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x82B SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x881 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x94C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH2 0x9FE PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xA14 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC17 SWAP3 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5A SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0xCCE JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0xCFE SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD73 DUP2 PUSH2 0xD58 JUMP JUMPDEST DUP2 EQ PUSH2 0xD7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD90 DUP2 PUSH2 0xD6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH2 0xDAB PUSH2 0xD33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDBA DUP5 DUP3 DUP6 ADD PUSH2 0xD81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD6 DUP2 PUSH2 0xDC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1C PUSH2 0xE17 PUSH2 0xE12 DUP5 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2E DUP3 PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP3 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE7A DUP2 PUSH2 0xDC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE97 DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB2 PUSH2 0xD33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC1 DUP5 DUP3 DUP6 ADD PUSH2 0xE88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF04 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0F DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF22 JUMPI PUSH2 0xF21 PUSH2 0xECA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF7C JUMPI PUSH2 0xF7B PUSH2 0xECA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC1 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFCC DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFDC JUMPI PUSH2 0xFDB PUSH2 0xF87 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF2 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFD DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xECA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1084 PUSH1 0x1F DUP4 PUSH2 0x103D JUMP JUMPDEST SWAP2 POP PUSH2 0x108F DUP3 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B3 DUP2 PUSH2 0x1077 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C3 DUP2 PUSH2 0xD58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10DE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x10EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDCD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1107 DUP2 PUSH2 0x10F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1124 DUP2 PUSH2 0x10FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1140 JUMPI PUSH2 0x113F PUSH2 0xD33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114E DUP5 DUP3 DUP6 ADD PUSH2 0x1115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x116C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x1179 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x1186 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDCD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xB0 0xC9 0xD2 0xBA GT STOP 0xD9 DELEGATECALL STATICCALL 0xE7 POP 0xC8 PUSH17 0xC2501EE273FAD03A46F282FEF75D7BD7A6 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "309:4187:2:-:0;;;1234:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;1325:12:2;1301:14;;:37;;;;;;;;;;;;;;;;;;1373:12;1349:14;;:37;;;;;;;;;;;;;;;;;;1234:160;;309:4187;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;309:4187:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REWARD_RATE_136": {
									"entryPoint": 1756,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimReward_397": {
									"entryPoint": 2549,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_251": {
									"entryPoint": 724,
									"id": 251,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStaked_453": {
									"entryPoint": 1683,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardPerToken_222": {
									"entryPoint": 3256,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@s_balances_154": {
									"entryPoint": 2487,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_lastUpdateTime_138": {
									"entryPoint": 1761,
									"id": 138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewardPerTokenStored_140": {
									"entryPoint": 1677,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewardsToken_130": {
									"entryPoint": 982,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewards_148": {
									"entryPoint": 3232,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_stakingToken_133": {
									"entryPoint": 2511,
									"id": 133,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_userRewardPerTokenPaid_144": {
									"entryPoint": 3355,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_304": {
									"entryPoint": 1767,
									"id": 304,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_350": {
									"entryPoint": 1020,
									"id": 350,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4439,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7335:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:3",
														"type": ""
													}
												],
												"src": "1176:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:3",
														"type": ""
													}
												],
												"src": "1259:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:3",
														"type": ""
													}
												],
												"src": "1383:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1643:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1653:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1660:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1653:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1629:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1639:3:3",
														"type": ""
													}
												],
												"src": "1611:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1737:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1747:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1805:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "1787:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1787:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1778:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1778:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1760:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1717:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1727:9:3",
														"type": ""
													}
												],
												"src": "1677:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1885:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1895:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1939:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1908:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1908:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1895:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1865:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1875:9:3",
														"type": ""
													}
												],
												"src": "1825:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2031:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2041:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2085:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2054:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2041:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2011:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2021:9:3",
														"type": ""
													}
												],
												"src": "1957:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2182:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2199:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2204:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2204:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2192:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2170:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2177:3:3",
														"type": ""
													}
												],
												"src": "2103:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2380:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2390:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2402:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2398:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2390:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2484:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2497:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2508:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2493:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2426:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2352:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2364:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2375:4:3",
														"type": ""
													}
												],
												"src": "2268:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2567:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2624:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2633:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2590:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2615:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2597:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2597:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2587:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:43:3"
															},
															"nodeType": "YulIf",
															"src": "2577:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2560:5:3",
														"type": ""
													}
												],
												"src": "2524:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2723:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2714:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2779:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2752:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2752:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2682:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2690:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2698:5:3",
														"type": ""
													}
												],
												"src": "2652:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2909:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2911:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2911:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2911:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2884:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:32:3"
															},
															"nodeType": "YulIf",
															"src": "2873:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3002:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3017:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3021:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3046:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3056:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3056:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3046:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2833:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2844:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2856:6:3",
														"type": ""
													}
												],
												"src": "2797:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3160:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3177:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3180:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3170:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3274:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3277:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3267:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3298:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3291:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3291:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3291:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3132:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3363:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3373:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3396:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3378:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3373:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3407:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3430:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3412:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3407:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3454:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3456:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3456:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3456:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3448:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3451:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3445:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:8:3"
															},
															"nodeType": "YulIf",
															"src": "3442:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3486:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3498:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3501:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3494:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3486:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3349:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3352:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3358:4:3",
														"type": ""
													}
												],
												"src": "3318:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3563:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3573:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3596:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3578:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3573:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3607:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3630:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3612:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3607:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3805:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3807:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3807:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3807:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3717:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3710:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3710:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3703:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3703:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3725:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3732:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3800:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3728:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3728:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3722:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3722:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3699:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:105:3"
															},
															"nodeType": "YulIf",
															"src": "3696:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3837:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3852:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3855:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3848:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3837:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3546:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3549:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3555:7:3",
														"type": ""
													}
												],
												"src": "3515:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3897:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3914:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3917:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3907:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3907:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3907:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4011:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4014:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4004:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4004:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4035:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4038:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4028:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4028:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4028:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3869:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4097:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4107:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4130:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4112:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4112:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4107:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4141:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4164:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4146:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4146:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4141:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4188:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4190:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4190:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4190:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4185:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4178:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4178:9:3"
															},
															"nodeType": "YulIf",
															"src": "4175:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4220:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4229:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4232:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4225:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4225:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4220:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4086:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4089:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4095:1:3",
														"type": ""
													}
												],
												"src": "4055:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4290:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4300:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4323:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4305:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4300:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4334:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4357:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4339:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4339:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4334:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4497:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4499:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4499:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4499:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4418:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4425:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4493:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4421:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4421:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4415:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4415:81:3"
															},
															"nodeType": "YulIf",
															"src": "4412:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4529:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4540:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4543:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4536:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4529:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4277:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4280:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4286:3:3",
														"type": ""
													}
												],
												"src": "4246:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4653:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4670:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4675:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4691:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4710:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4715:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4706:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4691:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4625:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4630:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4641:11:3",
														"type": ""
													}
												],
												"src": "4557:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4838:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4860:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4868:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4856:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4856:14:3"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:33:3",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4849:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4849:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4849:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4830:6:3",
														"type": ""
													}
												],
												"src": "4732:181:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5065:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5075:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5141:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5146:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5082:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5075:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5247:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "5158:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5260:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5271:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5276:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5260:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5053:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5061:3:3",
														"type": ""
													}
												],
												"src": "4919:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5462:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5472:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5484:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5495:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5480:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5472:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5519:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5530:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5515:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5515:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5538:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5544:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5534:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5534:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5508:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5508:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5564:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5572:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5572:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5564:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5442:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5457:4:3",
														"type": ""
													}
												],
												"src": "5291:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5781:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5798:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5821:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5803:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5803:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5791:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5769:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5776:3:3",
														"type": ""
													}
												],
												"src": "5716:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5966:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5976:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5988:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5999:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5984:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5984:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5976:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6056:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6069:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6080:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6065:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6065:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6012:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6012:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6012:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6137:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6150:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6161:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6146:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6146:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6093:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6093:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6093:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5930:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5942:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5950:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5961:4:3",
														"type": ""
													}
												],
												"src": "5840:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6220:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6230:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6255:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6248:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6248:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6241:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6230:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6202:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6212:7:3",
														"type": ""
													}
												],
												"src": "6178:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6314:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6368:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6377:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6380:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6370:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6370:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6370:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6337:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6359:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6344:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6344:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6334:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:40:3"
															},
															"nodeType": "YulIf",
															"src": "6324:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6307:5:3",
														"type": ""
													}
												],
												"src": "6274:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6456:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6466:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6481:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6475:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6466:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6521:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6497:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6497:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6434:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6442:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6450:5:3",
														"type": ""
													}
												],
												"src": "6396:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6613:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6659:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6661:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6661:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6661:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6634:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6643:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6630:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6630:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6655:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:32:3"
															},
															"nodeType": "YulIf",
															"src": "6623:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6752:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6767:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6781:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6771:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6796:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6839:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6850:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6835:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6835:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6859:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6806:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6806:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6796:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6583:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6594:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6606:6:3",
														"type": ""
													}
												],
												"src": "6539:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7044:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7054:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7066:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7077:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7062:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7062:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7054:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7134:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7147:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7158:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7143:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7143:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7090:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7090:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7215:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7228:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7239:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7224:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7224:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7171:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7171:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7171:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7297:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7310:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7321:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7306:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7306:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7253:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7253:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7000:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7012:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7020:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7028:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7039:4:3",
														"type": ""
													}
												],
												"src": "6890:442:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100e95760003560e01c8063a694fc3a1161008c578063b88a802f11610066578063b88a802f1461024c578063bea0815114610256578063cd3daf9d14610286578063f245ace4146102a4576100e9565b8063a694fc3a146101e2578063ab32eb69146101fe578063adca9b721461022e576100e9565b8063304ac91b116100c8578063304ac91b14610158578063399080ec146101765780635997bb37146101a65780636aa0838f146101c4576100e9565b80628cc262146100ee5780630bd21c561461011e5780632e1a7d4d1461013c575b600080fd5b61010860048036038101906101039190610d96565b6102d4565b6040516101159190610ddc565b60405180910390f35b6101266103d6565b6040516101339190610e56565b60405180910390f35b61015660048036038101906101519190610e9d565b6103fc565b005b61016061068d565b60405161016d9190610ddc565b60405180910390f35b610190600480360381019061018b9190610d96565b610693565b60405161019d9190610ddc565b60405180910390f35b6101ae6106dc565b6040516101bb9190610ddc565b60405180910390f35b6101cc6106e1565b6040516101d99190610ddc565b60405180910390f35b6101fc60048036038101906101f79190610e9d565b6106e7565b005b61021860048036038101906102139190610d96565b6109b7565b6040516102259190610ddc565b60405180910390f35b6102366109cf565b6040516102439190610e56565b60405180910390f35b6102546109f5565b005b610270600480360381019061026b9190610d96565b610ca0565b60405161027d9190610ddc565b60405180910390f35b61028e610cb8565b60405161029b9190610ddc565b60405180910390f35b6102be60048036038101906102b99190610d96565b610d1b565b6040516102cb9190610ddc565b60405180910390f35b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610367610cb8565b6103719190610ef9565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103bb9190610f2d565b6103c59190610fb6565b6103cf9190610fe7565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33610405610cb8565b6004819055504260038190555061041b816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260005414156104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e19061109a565b60405180910390fd5b600260008190555081600760008282546105049190610ef9565b9250508190555081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055a9190610ef9565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167f4cb6da433ea55f6e302b7bdbfeed740816a42301cde7f5bac5dff2b34037637460405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016106049291906110c9565b6020604051808303816000875af1158015610623573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610647919061112a565b905080610680576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060016000819055505050565b60045481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606481565b60035481565b336106f0610cb8565b60048190555042600381905550610706816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260005414156107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc9061109a565b60405180910390fd5b6002600081905550816000811415610819576040517ff45911f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826007600082825461082b9190610fe7565b9250508190555082600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108819190610fe7565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d60405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161092d93929190611157565b6020604051808303816000875af115801561094c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610970919061112a565b9050806109a9576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505060016000819055505050565b60086020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b336109fe610cb8565b60048190555042600381905550610a14816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060026000541415610ae3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ada9061109a565b60405180910390fd5b60026000819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550803373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60405160405180910390a36000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610c179291906110c9565b6020604051808303816000875af1158015610c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5a919061112a565b905080610c93576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600160008190555050565b60066020528060005260406000206000915090505481565b6000806007541415610cce576004549050610d18565b600754670de0b6b3a7640000606460035442610cea9190610ef9565b610cf49190610f2d565b610cfe9190610f2d565b610d089190610fb6565b600454610d159190610fe7565b90505b90565b60056020528060005260406000206000915090505481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d6382610d38565b9050919050565b610d7381610d58565b8114610d7e57600080fd5b50565b600081359050610d9081610d6a565b92915050565b600060208284031215610dac57610dab610d33565b5b6000610dba84828501610d81565b91505092915050565b6000819050919050565b610dd681610dc3565b82525050565b6000602082019050610df16000830184610dcd565b92915050565b6000819050919050565b6000610e1c610e17610e1284610d38565b610df7565b610d38565b9050919050565b6000610e2e82610e01565b9050919050565b6000610e4082610e23565b9050919050565b610e5081610e35565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b610e7a81610dc3565b8114610e8557600080fd5b50565b600081359050610e9781610e71565b92915050565b600060208284031215610eb357610eb2610d33565b5b6000610ec184828501610e88565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f0482610dc3565b9150610f0f83610dc3565b925082821015610f2257610f21610eca565b5b828203905092915050565b6000610f3882610dc3565b9150610f4383610dc3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f7c57610f7b610eca565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fc182610dc3565b9150610fcc83610dc3565b925082610fdc57610fdb610f87565b5b828204905092915050565b6000610ff282610dc3565b9150610ffd83610dc3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561103257611031610eca565b5b828201905092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611084601f8361103d565b915061108f8261104e565b602082019050919050565b600060208201905081810360008301526110b381611077565b9050919050565b6110c381610d58565b82525050565b60006040820190506110de60008301856110ba565b6110eb6020830184610dcd565b9392505050565b60008115159050919050565b611107816110f2565b811461111257600080fd5b50565b600081519050611124816110fe565b92915050565b6000602082840312156111405761113f610d33565b5b600061114e84828501611115565b91505092915050565b600060608201905061116c60008301866110ba565b61117960208301856110ba565b6111866040830184610dcd565b94935050505056fea26469706673582212204fb0c9d2ba1100d9f4fae750c870c2501ee273fad03a46f282fef75d7bd7a68e64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xF245ACE4 EQ PUSH2 0x2A4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x22E JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x304AC91B GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x399080EC EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6AA0838F EQ PUSH2 0x1C4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xBD21C56 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH2 0x9F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x367 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x371 SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH2 0x405 PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x41B DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4CB6DA433EA55F6E302B7BDBFEED740816A42301CDE7F5BAC5DFF2B340376374 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP3 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x623 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x6F0 PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x706 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF45911F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x82B SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x881 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x94C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH2 0x9FE PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xA14 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC17 SWAP3 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5A SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0xCCE JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0xCFE SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD73 DUP2 PUSH2 0xD58 JUMP JUMPDEST DUP2 EQ PUSH2 0xD7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD90 DUP2 PUSH2 0xD6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH2 0xDAB PUSH2 0xD33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDBA DUP5 DUP3 DUP6 ADD PUSH2 0xD81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD6 DUP2 PUSH2 0xDC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1C PUSH2 0xE17 PUSH2 0xE12 DUP5 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2E DUP3 PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP3 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE7A DUP2 PUSH2 0xDC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE97 DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB2 PUSH2 0xD33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC1 DUP5 DUP3 DUP6 ADD PUSH2 0xE88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF04 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0F DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF22 JUMPI PUSH2 0xF21 PUSH2 0xECA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF7C JUMPI PUSH2 0xF7B PUSH2 0xECA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC1 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFCC DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFDC JUMPI PUSH2 0xFDB PUSH2 0xF87 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF2 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFD DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xECA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1084 PUSH1 0x1F DUP4 PUSH2 0x103D JUMP JUMPDEST SWAP2 POP PUSH2 0x108F DUP3 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B3 DUP2 PUSH2 0x1077 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C3 DUP2 PUSH2 0xD58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10DE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x10EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDCD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1107 DUP2 PUSH2 0x10F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1124 DUP2 PUSH2 0x10FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1140 JUMPI PUSH2 0x113F PUSH2 0xD33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114E DUP5 DUP3 DUP6 ADD PUSH2 0x1115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x116C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x1179 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x1186 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDCD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xB0 0xC9 0xD2 0xBA GT STOP 0xD9 DELEGATECALL STATICCALL 0xE7 POP 0xC8 PUSH17 0xC2501EE273FAD03A46F282FEF75D7BD7A6 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "309:4187:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1901:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;352:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2797:358;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;767:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4382:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;729:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2246:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;968:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3222:356;;;:::i;:::-;;879:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1525:300;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;813:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1901:227;1955:7;2102:9;:18;2112:7;2102:18;;;;;;;;;;;;;;;;2094:4;2039:24;:33;2064:7;2039:33;;;;;;;;;;;;;;;;2020:16;:14;:16::i;:::-;:52;;;;:::i;:::-;1997:10;:19;2008:7;1997:19;;;;;;;;;;;;;;;;:76;;;;:::i;:::-;1996:102;;;;:::i;:::-;1995:125;;;;:::i;:::-;1975:145;;1901:227;;;:::o;352:28::-;;;;;;;;;;;;;:::o;2797:358::-;2853:10;3748:16;:14;:16::i;:::-;3723:22;:41;;;;3794:15;3775:16;:34;;;;3841:15;3848:7;3841:6;:15::i;:::-;3820:9;:18;3830:7;3820:18;;;;;;;;;;;;;;;:36;;;;3903:22;;3867:24;:33;3892:7;3867:33;;;;;;;;;;;;;;;:58;;;;1744:1:0::1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2906:6:2::2;2889:13;;:23;;;;;;;:::i;:::-;;;;;;;;2949:6;2923:10;:22;2934:10;2923:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;2997:6;2985:10;2971:33;;;;;;;;;;;;3015:12;3030:14;;;;;;;;;;;:23;;;3054:10;3066:6;3030:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3015:58;;3089:7;3084:64;;3120:16;;;;;;;;;;;;;;3084:64;2878:277;1701:1:0::1;2628:7;:22;;;;2797:358:2::0;;:::o;767:37::-;;;;:::o;4382:111::-;4439:7;4466:10;:19;4477:7;4466:19;;;;;;;;;;;;;;;;4459:26;;4382:111;;;:::o;681:41::-;719:3;681:41;:::o;729:31::-;;;;:::o;2246:429::-;2317:10;3748:16;:14;:16::i;:::-;3723:22;:41;;;;3794:15;3775:16;:34;;;;3841:15;3848:7;3841:6;:15::i;:::-;3820:9;:18;3830:7;3820:18;;;;;;;;;;;;;;;:36;;;;3903:22;;3867:24;:33;3892:7;3867:33;;;;;;;;;;;;;;;:58;;;;1744:1:0::1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2373:6:2::2;4016:1;4006:6;:11;4002:70;;;4041:19;;;;;;;;;;;;;;4002:70;2414:6:::3;2397:13;;:23;;;;;;;:::i;:::-;;;;;;;;2457:6;2431:10;:22;2442:10;2431:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;2498:6;2486:10;2479:26;;;;;;;;;;;;2516:12;2531:14;;;;;;;;;;;:27;;;2559:10;2579:4;2586:6;2531:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2516:77;;2609:7;2604:64;;2640:16;;;;;;;;;;;;;;2604:64;2386:289;2484:1:0::2;1701::::1;2628:7;:22;;;;2246:429:2::0;;:::o;968:45::-;;;;;;;;;;;;;;;;;:::o;387:28::-;;;;;;;;;;;;;:::o;3222:356::-;3267:10;3748:16;:14;:16::i;:::-;3723:22;:41;;;;3794:15;3775:16;:34;;;;3841:15;3848:7;3841:6;:15::i;:::-;3820:9;:18;3830:7;3820:18;;;;;;;;;;;;;;;:36;;;;3903:22;;3867:24;:33;3892:7;3867:33;;;;;;;;;;;;;;;:58;;;;1744:1:0::1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3303:14:2::2;3320:9;:21;3330:10;3320:21;;;;;;;;;;;;;;;;3303:38;;3376:1;3352:9;:21;3362:10;3352:21;;;;;;;;;;;;;;;:25;;;;3420:6;3408:10;3393:34;;;;;;;;;;;;3438:12;3453:14;;;;;;;;;;;:23;;;3477:10;3489:6;3453:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3438:58;;3512:7;3507:64;;3543:16;;;;;;;;;;;;;;3507:64;3292:286;;1701:1:0::1;2628:7;:22;;;;3222:356:2::0;:::o;879:44::-;;;;;;;;;;;;;;;;;:::o;1525:300::-;1572:7;1613:1;1596:13;;:18;1592:80;;;1638:22;;1631:29;;;;1592:80;1803:13;;1795:4;719:3;1761:16;;1743:15;:34;;;;:::i;:::-;1742:50;;;;:::i;:::-;:57;;;;:::i;:::-;1741:75;;;;:::i;:::-;1702:22;;:115;;;;:::i;:::-;1682:135;;1525:300;;:::o;813:59::-;;;;;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:60::-;1639:3;1660:5;1653:12;;1611:60;;;:::o;1677:142::-;1727:9;1760:53;1778:34;1787:24;1805:5;1787:24;:::i;:::-;1778:34;:::i;:::-;1760:53;:::i;:::-;1747:66;;1677:142;;;:::o;1825:126::-;1875:9;1908:37;1939:5;1908:37;:::i;:::-;1895:50;;1825:126;;;:::o;1957:140::-;2021:9;2054:37;2085:5;2054:37;:::i;:::-;2041:50;;1957:140;;;:::o;2103:159::-;2204:51;2249:5;2204:51;:::i;:::-;2199:3;2192:64;2103:159;;:::o;2268:250::-;2375:4;2413:2;2402:9;2398:18;2390:26;;2426:85;2508:1;2497:9;2493:17;2484:6;2426:85;:::i;:::-;2268:250;;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:180::-;3180:77;3177:1;3170:88;3277:4;3274:1;3267:15;3301:4;3298:1;3291:15;3318:191;3358:4;3378:20;3396:1;3378:20;:::i;:::-;3373:25;;3412:20;3430:1;3412:20;:::i;:::-;3407:25;;3451:1;3448;3445:8;3442:34;;;3456:18;;:::i;:::-;3442:34;3501:1;3498;3494:9;3486:17;;3318:191;;;;:::o;3515:348::-;3555:7;3578:20;3596:1;3578:20;:::i;:::-;3573:25;;3612:20;3630:1;3612:20;:::i;:::-;3607:25;;3800:1;3732:66;3728:74;3725:1;3722:81;3717:1;3710:9;3703:17;3699:105;3696:131;;;3807:18;;:::i;:::-;3696:131;3855:1;3852;3848:9;3837:20;;3515:348;;;;:::o;3869:180::-;3917:77;3914:1;3907:88;4014:4;4011:1;4004:15;4038:4;4035:1;4028:15;4055:185;4095:1;4112:20;4130:1;4112:20;:::i;:::-;4107:25;;4146:20;4164:1;4146:20;:::i;:::-;4141:25;;4185:1;4175:35;;4190:18;;:::i;:::-;4175:35;4232:1;4229;4225:9;4220:14;;4055:185;;;;:::o;4246:305::-;4286:3;4305:20;4323:1;4305:20;:::i;:::-;4300:25;;4339:20;4357:1;4339:20;:::i;:::-;4334:25;;4493:1;4425:66;4421:74;4418:1;4415:81;4412:107;;;4499:18;;:::i;:::-;4412:107;4543:1;4540;4536:9;4529:16;;4246:305;;;;:::o;4557:169::-;4641:11;4675:6;4670:3;4663:19;4715:4;4710:3;4706:14;4691:29;;4557:169;;;;:::o;4732:181::-;4872:33;4868:1;4860:6;4856:14;4849:57;4732:181;:::o;4919:366::-;5061:3;5082:67;5146:2;5141:3;5082:67;:::i;:::-;5075:74;;5158:93;5247:3;5158:93;:::i;:::-;5276:2;5271:3;5267:12;5260:19;;4919:366;;;:::o;5291:419::-;5457:4;5495:2;5484:9;5480:18;5472:26;;5544:9;5538:4;5534:20;5530:1;5519:9;5515:17;5508:47;5572:131;5698:4;5572:131;:::i;:::-;5564:139;;5291:419;;;:::o;5716:118::-;5803:24;5821:5;5803:24;:::i;:::-;5798:3;5791:37;5716:118;;:::o;5840:332::-;5961:4;5999:2;5988:9;5984:18;5976:26;;6012:71;6080:1;6069:9;6065:17;6056:6;6012:71;:::i;:::-;6093:72;6161:2;6150:9;6146:18;6137:6;6093:72;:::i;:::-;5840:332;;;;;:::o;6178:90::-;6212:7;6255:5;6248:13;6241:21;6230:32;;6178:90;;;:::o;6274:116::-;6344:21;6359:5;6344:21;:::i;:::-;6337:5;6334:32;6324:60;;6380:1;6377;6370:12;6324:60;6274:116;:::o;6396:137::-;6450:5;6481:6;6475:13;6466:22;;6497:30;6521:5;6497:30;:::i;:::-;6396:137;;;;:::o;6539:345::-;6606:6;6655:2;6643:9;6634:7;6630:23;6626:32;6623:119;;;6661:79;;:::i;:::-;6623:119;6781:1;6806:61;6859:7;6850:6;6839:9;6835:22;6806:61;:::i;:::-;6796:71;;6752:125;6539:345;;;;:::o;6890:442::-;7039:4;7077:2;7066:9;7062:18;7054:26;;7090:71;7158:1;7147:9;7143:17;7134:6;7090:71;:::i;:::-;7171:72;7239:2;7228:9;7224:18;7215:6;7171:72;:::i;:::-;7253;7321:2;7310:9;7306:18;7297:6;7253:72;:::i;:::-;6890:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "909600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REWARD_RATE()": "396",
								"claimReward()": "infinite",
								"earned(address)": "infinite",
								"getStaked(address)": "2886",
								"rewardPerToken()": "infinite",
								"s_balances(address)": "2859",
								"s_lastUpdateTime()": "2518",
								"s_rewardPerTokenStored()": "2452",
								"s_rewards(address)": "2858",
								"s_rewardsToken()": "infinite",
								"s_stakingToken()": "infinite",
								"s_userRewardPerTokenPaid(address)": "2902",
								"stake(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 309,
									"end": 4496,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1325,
									"end": 1337,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1315,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1301,
									"end": 1315,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1301,
									"end": 1338,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1385,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1363,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1349,
									"end": 1363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1349,
									"end": 1386,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1394,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 4496,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204fb0c9d2ba1100d9f4fae750c870c2501ee273fad03a46f282fef75d7bd7a68e64736f6c634300080b0033",
									".code": [
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "A694FC3A"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "B88A802F"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "B88A802F"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "BEA08151"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "CD3DAF9D"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "F245ACE4"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "A694FC3A"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "AB32EB69"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "ADCA9B72"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "304AC91B"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "304AC91B"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "399080EC"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "5997BB37"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "6AA0838F"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "8CC262"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "BD21C56"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 309,
											"end": 4496,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2039,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2071,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2072,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2020,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2020,
											"end": 2036,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2020,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2020,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2020,
											"end": 2072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2020,
											"end": 2072,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2020,
											"end": 2072,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2020,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2007,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1997,
											"end": 2073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1997,
											"end": 2073,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1997,
											"end": 2073,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1997,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1996,
											"end": 2098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1996,
											"end": 2098,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1996,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1995,
											"end": 2120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1995,
											"end": 2120,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1995,
											"end": 2120,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1995,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2128,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 352,
											"end": 380,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3748,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3809,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3848,
											"end": 3855,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3891,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 2912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2902,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2889,
											"end": 2902,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2944,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "PUSH",
											"source": 2,
											"value": "4CB6DA433EA55F6E302B7BDBFEED740816A42301CDE7F5BAC5DFF2B340376374"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3030,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3084,
											"end": 3148,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "PUSH",
											"source": 2,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3148,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3084,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 3155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3155,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 767,
											"end": 804,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 804,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4439,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4476,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4484,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4493,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 722,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 681,
											"end": 722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 681,
											"end": 722,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 729,
											"end": 760,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 729,
											"end": 760,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2327,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3748,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3809,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3848,
											"end": 3855,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3891,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4006,
											"end": 4017,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4072,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4002,
											"end": 4072,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "PUSH",
											"source": 2,
											"value": "F45911F000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4060,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4072,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4002,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2397,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2452,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2496,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "PUSH",
											"source": 2,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2559,
											"end": 2569,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2583,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2592,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2604,
											"end": 2668,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2604,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2386,
											"end": 2675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2675,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1013,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 387,
											"end": 415,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 415,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3277,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3748,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3809,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3848,
											"end": 3855,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3841,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3891,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3340,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3372,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3377,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "PUSH",
											"source": 2,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3427,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3476,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3477,
											"end": 3487,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3507,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3507,
											"end": 3571,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "PUSH",
											"source": 2,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3559,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3507,
											"end": 3571,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3507,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3578,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1672,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1592,
											"end": 1672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1660,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1660,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1631,
											"end": 1660,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1672,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1592,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1803,
											"end": 1816,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 719,
											"end": 722,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1758,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1742,
											"end": 1792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1742,
											"end": 1792,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1742,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1742,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1742,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1741,
											"end": 1816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1741,
											"end": 1816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1741,
											"end": 1816,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1741,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1702,
											"end": 1817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1702,
											"end": 1817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1817,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1702,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1825,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 872,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2256,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2510,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2743,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3132,
											"end": 3312,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3132,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3257,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3177,
											"end": 3178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3258,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3281,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3267,
											"end": 3282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3509,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3318,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3358,
											"end": 3362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3378,
											"end": 3398,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3398,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3378,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3432,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3476,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3442,
											"end": 3476,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3476,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3442,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3503,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3509,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3509,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3515,
											"end": 3863,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3515,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3555,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3596,
											"end": 3597,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3578,
											"end": 3598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3578,
											"end": 3598,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3578,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 3598,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3630,
											"end": 3631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3612,
											"end": 3632,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3612,
											"end": 3632,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3612,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3607,
											"end": 3632,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3607,
											"end": 3632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3798,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3728,
											"end": 3802,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3803,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3717,
											"end": 3718,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3720,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3827,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3696,
											"end": 3827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3827,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3696,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3863,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3869,
											"end": 4049,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3869,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3917,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3914,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4011,
											"end": 4012,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4004,
											"end": 4019,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4038,
											"end": 4042,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4043,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4240,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4055,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4096,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4130,
											"end": 4131,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4164,
											"end": 4165,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4186,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4175,
											"end": 4210,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4210,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4175,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4233,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4220,
											"end": 4234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4220,
											"end": 4234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4240,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4240,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4240,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4246,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4246,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4286,
											"end": 4289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 4323,
											"end": 4324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4300,
											"end": 4325,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4300,
											"end": 4325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4359,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4493,
											"end": 4494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4425,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4495,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4496,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4519,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4412,
											"end": 4519,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4519,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4412,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4543,
											"end": 4544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4551,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4551,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 4726,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4557,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4670,
											"end": 4673,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4663,
											"end": 4682,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4719,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 4713,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4706,
											"end": 4720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4691,
											"end": 4720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4691,
											"end": 4720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4726,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4726,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4726,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4732,
											"end": 4913,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4732,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4872,
											"end": 4905,
											"name": "PUSH",
											"source": 3,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4868,
											"end": 4869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4856,
											"end": 4870,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4906,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4913,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4919,
											"end": 5285,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4919,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5061,
											"end": 5064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5146,
											"end": 5148,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5141,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5082,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5082,
											"end": 5149,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5082,
											"end": 5149,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5082,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5149,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5158,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5247,
											"end": 5250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5158,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5158,
											"end": 5251,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5158,
											"end": 5251,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5158,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5271,
											"end": 5274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5267,
											"end": 5279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5260,
											"end": 5279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5260,
											"end": 5279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5285,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5291,
											"end": 5710,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5291,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5497,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5484,
											"end": 5493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5538,
											"end": 5542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5554,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5531,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5528,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5515,
											"end": 5532,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5508,
											"end": 5555,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5572,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5572,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5572,
											"end": 5703,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5572,
											"end": 5703,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5572,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5564,
											"end": 5703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5564,
											"end": 5703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5291,
											"end": 5710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5291,
											"end": 5710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5291,
											"end": 5710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5291,
											"end": 5710,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5716,
											"end": 5834,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5716,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 5821,
											"end": 5826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5803,
											"end": 5827,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5803,
											"end": 5827,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 5803,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5798,
											"end": 5801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 5828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5834,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5840,
											"end": 6172,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5840,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6080,
											"end": 6081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6065,
											"end": 6082,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6056,
											"end": 6062,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6012,
											"end": 6083,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6012,
											"end": 6083,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6012,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6161,
											"end": 6163,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6150,
											"end": 6159,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6143,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 6093,
											"end": 6165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6093,
											"end": 6165,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6093,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 6172,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 6172,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 6172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 6172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 6172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 6172,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6178,
											"end": 6268,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6178,
											"end": 6268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6255,
											"end": 6260,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6268,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6268,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6274,
											"end": 6390,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6274,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6344,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 6359,
											"end": 6364,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6344,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6344,
											"end": 6365,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6344,
											"end": 6365,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 6344,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6366,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6324,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6324,
											"end": 6384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6370,
											"end": 6382,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6324,
											"end": 6384,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6324,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6390,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6396,
											"end": 6533,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6396,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6450,
											"end": 6455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 6487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6488,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6466,
											"end": 6488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6466,
											"end": 6488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 6521,
											"end": 6526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6497,
											"end": 6527,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6497,
											"end": 6527,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 6497,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6396,
											"end": 6533,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6396,
											"end": 6533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6396,
											"end": 6533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6396,
											"end": 6533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6396,
											"end": 6533,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6539,
											"end": 6884,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 6539,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6606,
											"end": 6612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6634,
											"end": 6641,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6630,
											"end": 6653,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6626,
											"end": 6658,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6623,
											"end": 6742,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6623,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6623,
											"end": 6742,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 6661,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 6661,
											"end": 6740,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6661,
											"end": 6740,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 6661,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6623,
											"end": 6742,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6623,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6781,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6859,
											"end": 6866,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6850,
											"end": 6856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6839,
											"end": 6848,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6835,
											"end": 6857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6806,
											"end": 6867,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6806,
											"end": 6867,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6806,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6752,
											"end": 6877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6884,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6884,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6890,
											"end": 7332,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6890,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7043,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7079,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7066,
											"end": 7075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7062,
											"end": 7080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7090,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 7158,
											"end": 7159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7140,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7090,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7090,
											"end": 7161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7090,
											"end": 7161,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 7090,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7171,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 7239,
											"end": 7241,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7228,
											"end": 7237,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7221,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7171,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7171,
											"end": 7243,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7171,
											"end": 7243,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 7171,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7253,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 7321,
											"end": 7323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7303,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7253,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7253,
											"end": 7325,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7253,
											"end": 7325,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 7253,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 7332,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 7332,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 7332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 7332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 7332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 7332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 7332,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"REWARD_RATE()": "5997bb37",
							"claimReward()": "b88a802f",
							"earned(address)": "008cc262",
							"getStaked(address)": "399080ec",
							"rewardPerToken()": "cd3daf9d",
							"s_balances(address)": "ab32eb69",
							"s_lastUpdateTime()": "6aa0838f",
							"s_rewardPerTokenStored()": "304ac91b",
							"s_rewards(address)": "bea08151",
							"s_rewardsToken()": "0bd21c56",
							"s_stakingToken()": "adca9b72",
							"s_userRewardPerTokenPaid(address)": "f245ace4",
							"stake(uint256)": "a694fc3a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NeedsMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewStake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"stake(uint256)\":{\"params\":{\"amount\":\"| How much to stake\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"| How much to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimReward()\":{\"notice\":\"User claims their tokens\"},\"earned(address)\":{\"notice\":\"How much reward a user has earned\"},\"rewardPerToken()\":{\"notice\":\"How much reward a token gets based on how long it's been in and during which \\\"snapshots\\\"\"},\"stake(uint256)\":{\"notice\":\"Deposit tokens into this contract\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw tokens from this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test_1/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/Test_1/Staking.sol\":{\"keccak256\":\"0xf4dae537f80431136737a3d7425fc080babab05035561e9db40e63d64d09cd93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f48e466bf67cd0dc741b9fcdff11944767d61647339fd8cebd90e68d38aba16c\",\"dweb:/ipfs/QmXvVHttFgUQgzrNzwVuf5FLbLyCrhgqpJ3jKmeaxbqRRG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Test_1/Staking.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "contracts/Test_1/Staking.sol:Staking",
								"label": "s_rewardsToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 133,
								"contract": "contracts/Test_1/Staking.sol:Staking",
								"label": "s_stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 138,
								"contract": "contracts/Test_1/Staking.sol:Staking",
								"label": "s_lastUpdateTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 140,
								"contract": "contracts/Test_1/Staking.sol:Staking",
								"label": "s_rewardPerTokenStored",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 144,
								"contract": "contracts/Test_1/Staking.sol:Staking",
								"label": "s_userRewardPerTokenPaid",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 148,
								"contract": "contracts/Test_1/Staking.sol:Staking",
								"label": "s_rewards",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 150,
								"contract": "contracts/Test_1/Staking.sol:Staking",
								"label": "s_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 154,
								"contract": "contracts/Test_1/Staking.sol:Staking",
								"label": "s_balances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claimReward()": {
								"notice": "User claims their tokens"
							},
							"earned(address)": {
								"notice": "How much reward a user has earned"
							},
							"rewardPerToken()": {
								"notice": "How much reward a token gets based on how long it's been in and during which \"snapshots\""
							},
							"stake(uint256)": {
								"notice": "Deposit tokens into this contract"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw tokens from this contract"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"contracts/Test_1/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Test_1/Staking.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						],
						"NeedsMoreThanZero": [
							125
						],
						"ReentrancyGuard": [
							39
						],
						"Staking": [
							454
						],
						"TransferFailed": [
							123
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 40,
							"src": "130:62:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 118,
							"src": "194:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 123,
							"name": "TransferFailed",
							"nameLocation": "260:14:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 122,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "274:2:2"
							},
							"src": "254:23:2"
						},
						{
							"id": 125,
							"name": "NeedsMoreThanZero",
							"nameLocation": "285:17:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 124,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "302:2:2"
							},
							"src": "279:26:2"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 126,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "329:15:2"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "329:15:2"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454,
								39
							],
							"name": "Staking",
							"nameLocation": "318:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0bd21c56",
									"id": 130,
									"mutability": "mutable",
									"name": "s_rewardsToken",
									"nameLocation": "366:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "352:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 129,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 128,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "352:6:2"
										},
										"referencedDeclaration": 117,
										"src": "352:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "adca9b72",
									"id": 133,
									"mutability": "mutable",
									"name": "s_stakingToken",
									"nameLocation": "401:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "387:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 132,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 131,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "387:6:2"
										},
										"referencedDeclaration": 117,
										"src": "387:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5997bb37",
									"id": 136,
									"mutability": "constant",
									"name": "REWARD_RATE",
									"nameLocation": "705:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "681:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 134,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "681:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 135,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "719:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6aa0838f",
									"id": 138,
									"mutability": "mutable",
									"name": "s_lastUpdateTime",
									"nameLocation": "744:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "729:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "729:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "304ac91b",
									"id": 140,
									"mutability": "mutable",
									"name": "s_rewardPerTokenStored",
									"nameLocation": "782:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "767:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 139,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f245ace4",
									"id": 144,
									"mutability": "mutable",
									"name": "s_userRewardPerTokenPaid",
									"nameLocation": "848:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "813:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 143,
										"keyType": {
											"id": 141,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "821:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "813:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "832:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bea08151",
									"id": 148,
									"mutability": "mutable",
									"name": "s_rewards",
									"nameLocation": "914:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "879:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 147,
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "887:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "879:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 146,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 150,
									"mutability": "mutable",
									"name": "s_totalSupply",
									"nameLocation": "948:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "932:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 149,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "932:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ab32eb69",
									"id": 154,
									"mutability": "mutable",
									"name": "s_balances",
									"nameLocation": "1003:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "968:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 153,
										"keyType": {
											"id": 151,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "976:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "968:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 152,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "987:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 160,
									"name": "Staked",
									"nameLocation": "1028:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1051:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1035:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1073:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1057:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:46:2"
									},
									"src": "1022:59:2"
								},
								{
									"anonymous": false,
									"id": 166,
									"name": "WithdrewStake",
									"nameLocation": "1093:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1107:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1129:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:46:2"
									},
									"src": "1087:66:2"
								},
								{
									"anonymous": false,
									"id": 172,
									"name": "RewardsClaimed",
									"nameLocation": "1165:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1196:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1180:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1218:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1202:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:46:2"
									},
									"src": "1159:67:2"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1290:104:2",
										"statements": [
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "s_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1301:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 181,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1325:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 180,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1318:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1318:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "1301:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "1301:37:2"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "s_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1349:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 187,
																"name": "rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "1373:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 186,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1366:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1366:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "1349:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "1349:37:2"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "1254:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1246:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "rewardsToken",
												"nameLocation": "1276:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1268:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:44:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:0:2"
									},
									"scope": 454,
									"src": "1234:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1581:244:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 198,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1596:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1613:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1596:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "1592:80:2",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "1616:56:2",
													"statements": [
														{
															"expression": {
																"id": 201,
																"name": "s_rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1638:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 197,
															"id": 202,
															"nodeType": "Return",
															"src": "1631:29:2"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 205,
														"name": "s_rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1702:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 209,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 206,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "1743:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 207,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "1743:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 208,
																								"name": "s_lastUpdateTime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 138,
																								"src": "1761:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1743:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 210,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1742:36:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 211,
																					"name": "REWARD_RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 136,
																					"src": "1781:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1742:50:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31653138",
																				"id": 213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1795:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "1742:57:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 215,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1741:59:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 216,
																	"name": "s_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1803:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1741:75:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 218,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1740:77:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1702:115:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 220,
												"nodeType": "Return",
												"src": "1682:135:2"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1402:117:2",
										"text": " @notice How much reward a token gets based on how long it's been in and during which \"snapshots\""
									},
									"functionSelector": "cd3daf9d",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "1534:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1548:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1572:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1571:9:2"
									},
									"scope": 454,
									"src": "1525:300:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "1964:164:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 230,
																					"name": "s_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 154,
																					"src": "1997:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 232,
																				"indexExpression": {
																					"id": 231,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 225,
																					"src": "2008:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1997:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 233,
																								"name": "rewardPerToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 222,
																								"src": "2020:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 234,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2020:16:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 235,
																								"name": "s_userRewardPerTokenPaid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 144,
																								"src": "2039:24:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 237,
																							"indexExpression": {
																								"id": 236,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 225,
																								"src": "2064:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2039:33:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2020:52:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 239,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2019:54:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1997:76:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 241,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1996:78:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2094:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "1996:102:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 244,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1995:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 245,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "2102:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 247,
														"indexExpression": {
															"id": 246,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2112:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2102:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1995:125:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 249,
												"nodeType": "Return",
												"src": "1975:145:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1833:62:2",
										"text": " @notice How much reward a user has earned"
									},
									"functionSelector": "008cc262",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "1910:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1925:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1917:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1916:17:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1955:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1954:9:2"
									},
									"scope": 454,
									"src": "1901:227:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "2386:289:2",
										"statements": [
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 266,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2397:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 267,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "2414:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2397:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "2397:23:2"
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 270,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2431:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 273,
														"indexExpression": {
															"expression": {
																"id": 271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2442:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2442:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2431:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 274,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "2457:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2431:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2431:32:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2486:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2486:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "2498:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2479:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2479:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "EmitStatement",
												"src": "2474:31:2"
											},
											{
												"assignments": [
													284
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2521:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "2516:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 283,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2516:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2559:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2559:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 291,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2579:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$454",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$454",
																		"typeString": "contract Staking"
																	}
																],
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2571:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2571:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2571:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "2586:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 285,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2531:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "2531:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2531:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2516:77:2"
											},
											{
												"condition": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2608:8:2",
													"subExpression": {
														"id": 296,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "2609:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 302,
												"nodeType": "IfStatement",
												"src": "2604:64:2",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "2618:50:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 298,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "2640:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2640:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 300,
															"nodeType": "RevertStatement",
															"src": "2633:23:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "2136:104:2",
										"text": " @notice Deposit tokens into this contract\n @param amount | How much to stake"
									},
									"functionSelector": "a694fc3a",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 257,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2317:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2317:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 256,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 427,
												"src": "2304:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2304:24:2"
										},
										{
											"id": 261,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 260,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2338:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:12:2"
										},
										{
											"arguments": [
												{
													"id": 263,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 254,
													"src": "2373:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 264,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 262,
												"name": "moreThanZero",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 441,
												"src": "2360:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2360:20:2"
										}
									],
									"name": "stake",
									"nameLocation": "2255:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2261:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:16:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:2"
									},
									"scope": 454,
									"src": "2246:429:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "2878:277:2",
										"statements": [
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2889:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 317,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "2906:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2889:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2889:23:2"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 320,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2923:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 323,
														"indexExpression": {
															"expression": {
																"id": 321,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2934:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2934:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2923:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 324,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "2949:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2923:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2923:32:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 328,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2985:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2985:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "2997:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "WithdrewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2971:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2971:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "EmitStatement",
												"src": "2966:38:2"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3020:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 349,
														"src": "3015:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 333,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3015:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 337,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3054:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3054:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3066:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 335,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3030:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "3030:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3030:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3015:58:2"
											},
											{
												"condition": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3088:8:2",
													"subExpression": {
														"id": 342,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3089:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 348,
												"nodeType": "IfStatement",
												"src": "3084:64:2",
												"trueBody": {
													"id": 347,
													"nodeType": "Block",
													"src": "3098:50:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 344,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "3120:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3120:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 346,
															"nodeType": "RevertStatement",
															"src": "3113:23:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "2683:108:2",
										"text": " @notice Withdraw tokens from this contract\n @param amount | How much to withdraw"
									},
									"functionSelector": "2e1a7d4d",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 310,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2853:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2853:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 309,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 427,
												"src": "2840:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2840:24:2"
										},
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2865:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2865:12:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "2806:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2823:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2815:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2815:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:16:2"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2878:0:2"
									},
									"scope": 454,
									"src": "2797:358:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3292:286:2",
										"statements": [
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "3303:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3303:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 366,
												"initialValue": {
													"baseExpression": {
														"id": 362,
														"name": "s_rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "3320:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 365,
													"indexExpression": {
														"expression": {
															"id": 363,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3330:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3330:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3320:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3303:38:2"
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 367,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "3352:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 370,
														"indexExpression": {
															"expression": {
																"id": 368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3362:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3362:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3352:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3376:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3352:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "3352:25:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 375,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3408:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3408:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3420:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3393:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "EmitStatement",
												"src": "3388:39:2"
											},
											{
												"assignments": [
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3443:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "3438:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 380,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3438:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3477:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3477:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3489:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 382,
															"name": "s_rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3453:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "3453:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3438:58:2"
											},
											{
												"condition": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3511:8:2",
													"subExpression": {
														"id": 389,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3512:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 395,
												"nodeType": "IfStatement",
												"src": "3507:64:2",
												"trueBody": {
													"id": 394,
													"nodeType": "Block",
													"src": "3521:50:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 391,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "3543:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3543:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 393,
															"nodeType": "RevertStatement",
															"src": "3536:23:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "3163:53:2",
										"text": " @notice User claims their tokens"
									},
									"functionSelector": "b88a802f",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 354,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3267:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3267:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 353,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 427,
												"src": "3254:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3254:24:2"
										},
										{
											"id": 358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 357,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "3279:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3279:12:2"
										}
									],
									"name": "claimReward",
									"nameLocation": "3231:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3292:0:2"
									},
									"scope": 454,
									"src": "3222:356:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "3712:233:2",
										"statements": [
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "s_rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3723:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 402,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "3748:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3748:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3723:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3723:41:2"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "s_lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3775:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 407,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3794:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3794:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3775:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "3775:34:2"
											},
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 411,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "3820:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 413,
														"indexExpression": {
															"id": 412,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "3830:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3820:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 415,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "3848:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 414,
															"name": "earned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "3841:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3841:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3820:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "3820:36:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 419,
															"name": "s_userRewardPerTokenPaid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "3867:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "3892:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3867:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "s_rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3903:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3867:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "3867:58:2"
											},
											{
												"id": 425,
												"nodeType": "PlaceholderStatement",
												"src": "3936:1:2"
											}
										]
									},
									"id": 427,
									"name": "updateReward",
									"nameLocation": "3682:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3703:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3695:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3694:17:2"
									},
									"src": "3673:272:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "3991:100:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "4006:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4016:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4006:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "4002:70:2",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "4019:53:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 434,
																	"name": "NeedsMoreThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "4041:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4041:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "RevertStatement",
															"src": "4034:26:2"
														}
													]
												}
											},
											{
												"id": 439,
												"nodeType": "PlaceholderStatement",
												"src": "4082:1:2"
											}
										]
									},
									"id": 441,
									"name": "moreThanZero",
									"nameLocation": "3962:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3983:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3975:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:16:2"
									},
									"src": "3953:138:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4448:45:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 448,
														"name": "s_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "4466:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 450,
													"indexExpression": {
														"id": 449,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "4477:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4466:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 447,
												"id": 451,
												"nodeType": "Return",
												"src": "4459:26:2"
											}
										]
									},
									"functionSelector": "399080ec",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStaked",
									"nameLocation": "4391:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4409:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4401:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:17:2"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4439:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4439:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4438:9:2"
									},
									"scope": 454,
									"src": "4382:111:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 455,
							"src": "309:4187:2",
							"usedErrors": [
								123,
								125
							]
						}
					],
					"src": "103:4393:2"
				},
				"id": 2
			}
		}
	}
}