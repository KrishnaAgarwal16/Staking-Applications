{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_TestToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenSplitter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_startBlock",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "_rewardsPerBlockForStaking",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_rewardsPerBlockForOthers",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_periodLengthesInBlocks",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "_numberPeriods",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "harvestedAmount",
						"type": "uint256"
					}
				],
				"name": "Compound",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "harvestedAmount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "currentPhase",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startBlock",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rewardPerBlockForStaking",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rewardPerBlockForOthers",
						"type": "uint256"
					}
				],
				"name": "NewRewardsPerBlock",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "harvestedAmount",
						"type": "uint256"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "NUMBER_PERIODS",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PRECISION_FACTOR",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "START_BLOCK",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "TestToken",
				"outputs": [
					{
						"internalType": "contract ITestToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "accTokenPerShare",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "calculatePendingRewards",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentPhase",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "harvestAndCompound",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastRewardBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rewardPerBlockForOthers",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rewardPerBlockForStaking",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "stakingPeriod",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "rewardPerBlockForStaking",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rewardPerBlockForOthers",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "periodLengthInBlock",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenSplitter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalAmountStaked",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updatePool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rewardDebt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"calculatePendingRewards(address)": {
					"params": {
						"user": "address of the user"
					},
					"returns": {
						"_0": "Pending rewards"
					}
				},
				"constructor": {
					"params": {
						"_TestToken": "LOOKS token address",
						"_numberPeriods": "number of periods with different rewards/lengthes (e.g., if 3 changes --> 4 periods)",
						"_periodLengthesInBlocks": "array of period lengthes",
						"_rewardsPerBlockForOthers": "array of rewards per block for other purposes (team + treasury + trading rewards)",
						"_rewardsPerBlockForStaking": "array of rewards per block for staking",
						"_startBlock": "start block for reward program",
						"_tokenSplitter": "token splitter contract address (for team and trading rewards)"
					}
				},
				"deposit(uint256)": {
					"params": {
						"amount": "amount to deposit (in TEST)"
					}
				},
				"withdraw(uint256)": {
					"params": {
						"amount": "amount to withdraw"
					}
				}
			},
			"title": "TokenDistributor",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"calculatePendingRewards(address)": {
					"notice": "Calculate pending rewards for a user"
				},
				"constructor": {
					"notice": "Constructor"
				},
				"deposit(uint256)": {
					"notice": "Deposit staked tokens and compounds pending rewards"
				},
				"harvestAndCompound()": {
					"notice": "Compound based on pending rewards"
				},
				"updatePool()": {
					"notice": "Update pool rewards"
				},
				"withdraw(uint256)": {
					"notice": "Withdraw staked tokens and compound pending rewards"
				},
				"withdrawAll()": {
					"notice": "Withdraw all staked tokens and collect tokens"
				}
			},
			"notice": "It handles the distribution of LOOKS token. It auto-adjusts block rewards over a set number of periods.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/LooksRare/TokenDistributor.sol": "TokenDistributor"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
			"license": "MIT",
			"urls": [
				"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
				"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
				"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
			]
		},
		"contracts/LooksRare/ITestToken.sol": {
			"keccak256": "0xa914180d7c32a6673c7edef557d888d112be65c0c0803d4cd0181052bef4dabe",
			"license": "MIT",
			"urls": [
				"bzz-raw://9d14b5ff473552185238d22a03772f7079b2ae0bfa397e382d72cd91959dcb4d",
				"dweb:/ipfs/QmQDNGxe1GsmUCUqQgkWjp7cg1dDwBUehSuxnDAzdt62Uh"
			]
		},
		"contracts/LooksRare/TokenDistributor.sol": {
			"keccak256": "0xca94a376f045cb37663ac348fedcab81b515a2932fa8e46d4e1eab529e04470e",
			"license": "MIT",
			"urls": [
				"bzz-raw://58fae322765f7b248f8ed701bc620631a00c47bf24fe60a22482db5fb28e575c",
				"dweb:/ipfs/QmSVYTHu6Ls9iXwndhvNVMhWKvPhtYzf2mzcThFDGsssxS"
			]
		}
	},
	"version": 1
}